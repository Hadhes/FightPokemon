<!DOCTYPE html>
<html>
  <head>
    <link rel="stylesheet" href="/stylesheets/styleCombat.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Dongle&family=Open+Sans:wght@400;700&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <div>
      <img id="gameboy" src="../images/gameboy.png" />
      <img id="terrain" src="../images/terrain.png" width="373" />
      <img id="pokemon" src="<%= pokemons[0].sprite %>" width="180" />
      <img id="pokemonVS" src="<%= pokemonsVS[0].sprite %>" width="100" />
      <div id="textPoke"></div>

      <!-- Emplacement Nom, PV, et Barre de Vie Mon Pokemon -->
      <div id="cadrePoke"></div>
      <div id="nomPoke">
        <p id="nomPokeMAJ"><%= pokemons[0].nom.toUpperCase() %></p>
        <p>Lv100</p>
      </div>
      <div id="divBarrePoke">
        <progress
          id="barrePoke"
          value="<%= pokemons[0].stats.pv %>"
          max="<%= pokemons[0].stats.pv %>"
        ></progress>
      </div>
      <div></div>
      <div id="pvMaxPoke">
        <%= pokemons[0].stats.pv %>/<%= pokemons[0].stats.pv %>
      </div>
      <div id="statut"></div>
      <div id="att"></div>
      <div id="def"></div>
      <div id="attS"></div>
      <div id="defS"></div>
      <div id="vit"></div>

      <div id="pokeball">
        <img
          id="pokeball1"
          src="../images/Pokeball.png"
          width="10"
          style="cursor: pointer"
          onclick="changementPoke(1)"
        />
        <img
          id="pokeball2"
          src="../images/Pokeball.png"
          width="10"
          style="cursor: pointer"
          onclick="changementPoke(2)"
        />
        <img
          id="pokeball3"
          src="../images/Pokeball.png"
          width="10"
          style="cursor: pointer"
          onclick="changementPoke(3)"
        />
        <img
          id="pokeball4"
          src="../images/Pokeball.png"
          width="10"
          style="cursor: pointer"
          onclick="changementPoke(4)"
        />
        <img
          id="pokeball5"
          src="../images/Pokeball.png"
          width="10"
          style="cursor: pointer"
          onclick="changementPoke(5)"
        />
        <img
          id="pokeball6"
          src="../images/Pokeball.png"
          width="10"
          style="cursor: pointer"
          onclick="changementPoke(6)"
        />
      </div>

      <!-- Emplacement Nom, PV, et Barre de Vie Pokemon adverse -->
      <div id="cadrePokeVS"></div>
      <div id="nomPokeVS">
        <p id="nomPokeMAJVS"><%= pokemonsVS[0].nom.toUpperCase() %></p>
        <p>Lv100</p>
      </div>
      <div>
        <progress
          id="barrePokeVS"
          value="<%= pokemonsVS[0].stats.pv %>"
          max="<%= pokemonsVS[0].stats.pv %>"
        ></progress>
      </div>
      <div id="pvMaxPokeVS">
        <%= pokemonsVS[0].stats.pv %>/<%= pokemonsVS[0].stats.pv %>
      </div>
      <div id="statutVS"></div>
      <div id="attVS"></div>
      <div id="defVS"></div>
      <div id="attSVS"></div>
      <div id="defSVS"></div>
      <div id="vitVS"></div>

      <div id="pokeballVS">
        <img id="pokeballVS1" src="../images/Pokeball.png" width="10" />
        <img id="pokeballVS2" src="../images/Pokeball.png" width="10" />
        <img id="pokeballVS3" src="../images/Pokeball.png" width="10" />
        <img id="pokeballVS4" src="../images/Pokeball.png" width="10" />
        <img id="pokeballVS5" src="../images/Pokeball.png" width="10" />
        <img id="pokeballVS6" src="../images/Pokeball.png" width="10" />
      </div>

      <div id="attaquePoke1" onclick="calculPV(1)" style="cursor: pointer">
        <div id="badgeAtt1"><%= pokemons[0].attaque1.type %></div>
        <div id="nomAtt1"><%= pokemons[0].attaque1.nom %></div>
      </div>
      <div id="attaquePoke2" onclick="calculPV(2)" style="cursor: pointer">
        <div id="badgeAtt2"><%= pokemons[0].attaque2.type %></div>
        <div id="nomAtt2"><%= pokemons[0].attaque2.nom %></div>
      </div>
      <div id="attaquePoke3" onclick="calculPV(3)" style="cursor: pointer">
        <div id="badgeAtt3"><%= pokemons[0].attaque3.type %></div>
        <div id="nomAtt3"><%= pokemons[0].attaque3.nom %></div>
      </div>
      <div id="attaquePoke4" onclick="calculPV(4)" style="cursor: pointer">
        <div id="badgeAtt4"><%= pokemons[0].attaque4.type %></div>
        <div id="nomAtt4"><%= pokemons[0].attaque4.nom %></div>
      </div>
    </div>
  </body>

  <script>
    let joueur = true;

    let tabPVActu = new Array(6);
    let tabPVActuVS = new Array(6);
    let tabStatut = ["Vide", "Vide", "Vide", "Vide", "Vide", "Vide"];
    let tabStatutVS = ["Vide", "Vide", "Vide", "Vide", "Vide", "Vide"];
    let tabStatutPerma = ["Vide", "Vide", "Vide", "Vide", "Vide", "Vide"];
    let tabStatutPermaVS = ["Vide", "Vide", "Vide", "Vide", "Vide", "Vide"];
    let tabCountStatutPerma = [0, 0, 0, 0, 0, 0];
    let tabCountStatutPermaVS = [0, 0, 0, 0, 0, 0];

    let bru = 0;
    let bruVS = 0;

    let para = 0;
    let paraVS = 0;

    let pois = 0;
    let poisVS = 0;

    let nombre = 0;
    let nombreVS = 0;

    let derniereAttaque = "";
    let derniereAttaqueVS = "";

    // Stats & attaques pokemon utilis√©
    let numPoke = 1;

    let pv = Number("<%- pokemons[0].stats.pv %>");
    let pvActu;
    if (tabPVActu[nombre] === Number) {
      pvActu = tabPVActu[nombre];
    } else {
      pvActu = pv;
    }
    let attMaxPoke = Number("<%- pokemons[0].stats.att %>");
    let defMaxPoke = Number("<%- pokemons[0].stats.def %>");
    let attSMaxPoke = Number("<%- pokemons[0].stats.attS %>");
    let defSMaxPoke = Number("<%- pokemons[0].stats.defS %>");
    let vitMaxPoke = Number("<%- pokemons[0].stats.vit %>");
    let attPoke = attMaxPoke;
    let defPoke = defMaxPoke;
    let attSPoke = attSMaxPoke;
    let defSPoke = defSMaxPoke;
    let vitPoke = vitMaxPoke;

    let attaque_dmg1 = Number("<%- pokemons[0].attaque1.puissance %>");
    let attaque_dmg2 = Number("<%- pokemons[0].attaque2.puissance %>");
    let attaque_dmg3 = Number("<%- pokemons[0].attaque3.puissance %>");
    let attaque_dmg4 = Number("<%- pokemons[0].attaque4.puissance %>");
    let attaque1Type = "<%- pokemons[0].attaque1.type %>";
    let attaque2Type = "<%- pokemons[0].attaque2.type %>";
    let attaque3Type = "<%- pokemons[0].attaque3.type %>";
    let attaque4Type = "<%- pokemons[0].attaque4.type %>";
    let attaque1Nom = "<%- pokemons[0].attaque1.nom %>";
    let attaque2Nom = "<%- pokemons[0].attaque2.nom %>";
    let attaque3Nom = "<%- pokemons[0].attaque3.nom %>";
    let attaque4Nom = "<%- pokemons[0].attaque4.nom %>";
    let attaque1Classe = "<%- pokemons[0].attaque1.classe %>";
    let attaque2Classe = "<%- pokemons[0].attaque2.classe %>";
    let attaque3Classe = "<%- pokemons[0].attaque3.classe %>";
    let attaque4Classe = "<%- pokemons[0].attaque4.classe %>";

    let type1 = "<%- pokemons[0].type1 %>";
    let type2 = "<%- pokemons[0].type2 %>";

    // Stats & attaques pokemon adverse
    let numPokeVS = 1;

    let pvVS = Number("<%- pokemonsVS[0].stats.pv %>");
    let pvActuVS;
    if (tabPVActuVS[nombre] === Number) {
      pvActuVS = tabPVActuVS[nombre];
    } else {
      pvActuVS = pvVS;
    }
    let attMaxPokeVS = Number("<%- pokemonsVS[0].stats.att %>");
    let defMaxPokeVS = Number("<%- pokemonsVS[0].stats.def %>");
    let attSMaxPokeVS = Number("<%- pokemonsVS[0].stats.attS %>");
    let defSMaxPokeVS = Number("<%- pokemonsVS[0].stats.defS %>");
    let vitMaxPokeVS = Number("<%- pokemonsVS[0].stats.vit %>");
    let attPokeVS = attMaxPokeVS;
    let defPokeVS = defMaxPokeVS;
    let attSPokeVS = attSMaxPokeVS;
    let defSPokeVS = defSMaxPokeVS;
    let vitPokeVS = vitMaxPokeVS;

    let attaque_dmg1VS = Number("<%- pokemonsVS[0].attaque1.puissance %>");
    let attaque_dmg2VS = Number("<%- pokemonsVS[0].attaque2.puissance %>");
    let attaque_dmg3VS = Number("<%- pokemonsVS[0].attaque3.puissance %>");
    let attaque_dmg4VS = Number("<%- pokemonsVS[0].attaque4.puissance %>");
    let attaque1TypeVS = "<%- pokemonsVS[0].attaque1.type %>";
    let attaque2TypeVS = "<%- pokemonsVS[0].attaque2.type %>";
    let attaque3TypeVS = "<%- pokemonsVS[0].attaque3.type %>";
    let attaque4TypeVS = "<%- pokemonsVS[0].attaque4.type %>";
    let attaque1NomVS = "<%- pokemonsVS[0].attaque1.nom %>";
    let attaque2NomVS = "<%- pokemonsVS[0].attaque2.nom %>";
    let attaque3NomVS = "<%- pokemonsVS[0].attaque3.nom %>";
    let attaque4NomVS = "<%- pokemonsVS[0].attaque4.nom %>";
    let attaque1ClasseVS = "<%- pokemonsVS[0].attaque1.classe %>";
    let attaque2ClasseVS = "<%- pokemonsVS[0].attaque2.classe %>";
    let attaque3ClasseVS = "<%- pokemonsVS[0].attaque3.classe %>";
    let attaque4ClasseVS = "<%- pokemonsVS[0].attaque4.classe %>";

    let type1VS = "<%- pokemonsVS[0].type1 %>";
    let type2VS = "<%- pokemonsVS[0].type2 %>";

    //Couleurs badges attaques
    let colorAttaque1 = "white";
    let colorAttaque2 = "white";
    let colorAttaque3 = "white";
    let colorAttaque4 = "white";

    function couleur(type, attaque) {
      if (type === "normal") {
        return (attaque = "rgba(173,165,148,255)");
      } else if (type === "fighting") {
        return (attaque = "rgba(165,82,57,255)");
      } else if (type === "fire") {
        return (attaque = "rgba(247,82,49,255)");
      } else if (type === "water") {
        return (attaque = "rgba(57,156,255,255)");
      } else if (type === "rock") {
        return (attaque = "rgba(189,165,90,255)");
      } else if (type === "dragon") {
        return (attaque = "rgba(136,88,246,255)");
      } else if (type === "grass") {
        return (attaque = "rgba(123,206,82,255)");
      } else if (type === "ice") {
        return (attaque = "rgba(90,206,231,255)");
      } else if (type === "bug") {
        return (attaque = "rgba(173,189,33,255)");
      } else if (type === "steel") {
        return (attaque = "rgba(173,173,198,255)");
      } else if (type === "psychic") {
        return (attaque = "rgba(255,115,165,255)");
      } else if (type === "ghost") {
        return (attaque = "rgba(99,99,181,255)");
      } else if (type === "ground") {
        return (attaque = "rgba(214,181,90,255)");
      } else if (type === "poison") {
        return (attaque = "rgba(181,90,165,255)");
      } else if (type === "flying") {
        return (attaque = "rgba(156,173,247,255)");
      } else if (type === "electric") {
        return (attaque = "rgba(255,198,49,255)");
      } else if (type === "fairy") {
        return (attaque = "rgba(224,154,227,255)");
      } else if (type === "dark") {
        return (attaque = "rgba(115,90,74,255)");
      }
    }

    colorAttaque1 = couleur(attaque1Type, colorAttaque1);
    colorAttaque2 = couleur(attaque2Type, colorAttaque2);
    colorAttaque3 = couleur(attaque3Type, colorAttaque3);
    colorAttaque4 = couleur(attaque4Type, colorAttaque4);

    window.onload = function () {
      document.getElementById("badgeAtt1").style.backgroundColor =
        colorAttaque1;
      document.getElementById("badgeAtt2").style.backgroundColor =
        colorAttaque2;
      document.getElementById("badgeAtt3").style.backgroundColor =
        colorAttaque3;
      document.getElementById("badgeAtt4").style.backgroundColor =
        colorAttaque4;
    };

    // Calcule du pourcentage pour le calcul de changement de stats
    function pourcentage(cran, pourcentageV) {
      if (cran === 0) {
        return (pourcentageV = 100);
      } else if (cran === -1) {
        return (pourcentageV = 67);
      } else if (cran === -2) {
        return (pourcentageV = 50);
      } else if (cran === -3) {
        return (pourcentageV = 40);
      } else if (cran === -4) {
        return (pourcentageV = 33);
      } else if (cran === -5) {
        return (pourcentageV = 29);
      } else if (cran <= -6) {
        return (pourcentageV = 25);
      } else if (cran === 1) {
        return (pourcentageV = 150);
      } else if (cran === 2) {
        return (pourcentageV = 200);
      } else if (cran === 3) {
        return (pourcentageV = 250);
      } else if (cran === 4) {
        return (pourcentageV = 300);
      } else if (cran === 5) {
        return (pourcentageV = 350);
      } else if (cran >= 6) {
        return (pourcentageV = 400);
      }
    }

    let cranStat = [0, 0, 0, 0, 0];
    let cranStatVS = [0, 0, 0, 0, 0];

    const badgeAtt = document.getElementById("att");
    const badgeDef = document.getElementById("def");
    const badgeAttS = document.getElementById("attS");
    const badgeDefS = document.getElementById("defS");
    const badgeVit = document.getElementById("vit");

    const badgeAttVS = document.getElementById("attVS");
    const badgeDefVS = document.getElementById("defVS");
    const badgeAttSVS = document.getElementById("attSVS");
    const badgeDefSVS = document.getElementById("defSVS");
    const badgeVitVS = document.getElementById("vitVS");

    // Baisse des stats avec une attaque
    function baisseStat(stat, num, statut) {
      let pourcentageT = 100;
      if (joueur === false) {
        if (stat === "att") {
          cranStat[0] = cranStat[0] - num;
          if (cranStat[0] <= -6) {
            cranStat[0] = -6;
          }
          pourcentageT = pourcentage(cranStat[0], pourcentageT);
          if (cranStat[0] < 0) {
            badgeAtt.textContent = "att" + cranStat[0];
            badgeAtt.style.backgroundColor = "red";
          } else if (cranStat[0] > 0) {
            badgeAtt.textContent = "att+" + cranStat[0];
            badgeAtt.style.backgroundColor = "green";
          } else {
            badgeAtt.textContent = "";
            badgeAtt.style.backgroundColor = "rgb(255, 223, 148)";
          }
          if (statut === "Br√ªlure") {
            return (attPoke = (attMaxPoke * pourcentageT) / 100 / 2);
          } else {
            return (attPoke = (attMaxPoke * pourcentageT) / 100);
          }
        } else if (stat === "def") {
          cranStat[1] = cranStat[1] - num;
          if (cranStat[1] <= -6) {
            cranStat[1] = -6;
          }
          1;
          pourcentageT = pourcentage(cranStat[1], pourcentageT);
          if (cranStat[1] < 0) {
            badgeDef.textContent = "def" + cranStat[1];
            badgeDef.style.backgroundColor = "red";
          } else if (cranStat[1] > 0) {
            badgeDef.textContent = "def+" + cranStat[1];
            badgeDef.style.backgroundColor = "green";
          } else {
            badgeDef.textContent = "";
            badgeDef.style.backgroundColor = "rgb(255, 223, 148)";
          }
          return (defPoke = (defMaxPoke * pourcentageT) / 100);
        } else if (stat === "attS") {
          cranStat[2] = cranStat[2] - num;
          if (cranStat[2] <= -6) {
            cranStat[2] = -6;
          }
          pourcentageT = pourcentage(cranStat[2], pourcentageT);
          if (cranStat[2] < 0) {
            badgeAttS.textContent = "attS" + cranStat[2];
            badgeAttS.style.backgroundColor = "red";
          } else if (cranStat[2] > 0) {
            badgeAttS.textContent = "attS+" + cranStat[2];
            badgeAttS.style.backgroundColor = "green";
          } else {
            badgeAttS.textContent = "";
            badgeAttSf.style.backgroundColor = "rgb(255, 223, 148)";
          }
          return (attSPoke = (attSMaxPoke * pourcentageT) / 100);
        } else if (stat === "defS") {
          cranStat[3] = cranStat[3] - num;
          if (cranStat[3] <= -6) {
            cranStat[3] = -6;
          }
          pourcentageT = pourcentage(cranStat[3], pourcentageT);
          if (cranStat[3] < 0) {
            badgeDefS.textContent = "defS" + cranStat[3];
            badgeDefS.style.backgroundColor = "red";
          } else if (cranStat[3] > 0) {
            badgeDefS.textContent = "defS+" + cranStat[3];
            badgeDefS.style.backgroundColor = "green";
          } else {
            badgeDefS.textContent = "";
            badgeDefS.style.backgroundColor = "rgb(255, 223, 148)";
          }
          return (defSPoke = (defSMaxPoke * pourcentageT) / 100);
        } else if (stat === "vit") {
          cranStat[4] = cranStat[4] - num;
          if (cranStat[4] <= -6) {
            cranStat[4] = -6;
          }
          pourcentageT = pourcentage(cranStat[4], pourcentageT);
          if (cranStat[4] < 0) {
            badgevit.textContent = "vit" + cranStat[4];
            badgevit.style.backgroundColor = "red";
          } else if (cranStat[4] > 0) {
            badgevit.textContent = "vit+" + cranStat[4];
            badgevit.style.backgroundColor = "green";
          } else {
            badgevit.textContent = "";
            badgevit.style.backgroundColor = "rgb(255, 223, 148)";
          }
          if (statut === "Paralysie") {
            return (vitPoke = (vitMaxPoke * pourcentageT) / 100 / 2);
          } else {
            return (vitPoke = (vitMaxPoke * pourcentageT) / 100);
          }
        }
      } else if (joueur === true) {
        if (stat === "att") {
          cranStatVS[0] = cranStatVS[0] - num;
          if (cranStatVS[0] <= -6) {
            cranStatVS[0] = -6;
          }
          pourcentageT = pourcentage(cranStatVS[0], pourcentageT);
          if (cranStatVS[0] < 0) {
            badgeAttVS.textContent = "att" + cranStatVS[0];
            badgeAttVS.style.backgroundColor = "red";
          } else if (cranStatVS[0] > 0) {
            badgeAttVS.textContent = "att+" + cranStatVS[0];
            badgeAttVS.style.backgroundColor = "green";
          } else {
            badgeAttVS.textContent = "";
            badgeAttVS.style.backgroundColor = "rgb(255, 223, 148)";
          }
          if (statut === "Br√ªlure") {
            return (attPokeVS = (attMaxPokeVS * pourcentageT) / 100 / 2);
          } else {
            return (attPokeVS = (attMaxPokeVS * pourcentageT) / 100);
          }
        } else if (stat === "def") {
          cranStatVS[1] = cranStatVS[1] - num;
          if (cranStatVS[1] <= -6) {
            cranStatVS[1] = -6;
          }
          pourcentageT = pourcentage(cranStatVS[1], pourcentageT);
          if (cranStatVS[1] < 0) {
            badgeDefVS.textContent = "def" + cranStatVS[1];
            badgeDefVS.style.backgroundColor = "red";
          } else if (cranStatVS[1] > 0) {
            badgeDefVS.textContent = "def+" + cranStatVS[1];
            badgeDefVS.style.backgroundColor = "green";
          } else {
            badgeDefVS.textContent = "";
            badgeDefVS.style.backgroundColor = "rgb(255, 223, 148)";
          }
          return (defPokeVS = (defMaxPokeVS * pourcentageT) / 100);
        } else if (stat === "attS") {
          cranStatVS[2] = cranStatVS[2] - num;
          if (cranStatVS[2] <= -6) {
            cranStatVS[2] = -6;
          }
          pourcentageT = pourcentage(cranStatVS[2], pourcentageT);
          if (cranStatVS[2] < 0) {
            badgeAttSVS.textContent = "attS" + cranStatVS[2];
            badgeAttSVS.style.backgroundColor = "red";
          } else if (cranStatVS[2] > 0) {
            badgeAttSVS.textContent = "attS+" + cranStatVS[2];
            badgeAttSVS.style.backgroundColor = "green";
          } else {
            badgeAttSVS.textContent = "";
            badgeAttSVS.style.backgroundColor = "rgb(255, 223, 148)";
          }
          return (attSPokeVS = (attSMaxPokeVS * pourcentageT) / 100);
        } else if (stat === "defS") {
          cranStatVS[3] = cranStatVS[3] - num;
          if (cranStatVS[3] <= -6) {
            cranStatVS[3] = -6;
          }
          pourcentageT = pourcentage(cranStatVS[3], pourcentageT);
          if (cranStatVS[3] < 0) {
            badgeDefSVS.textContent = "defS" + cranStatVS[3];
            badgeDefSVS.style.backgroundColor = "red";
          } else if (cranStatVS[3] > 0) {
            badgeDefSVS.textContent = "defS+" + cranStatVS[3];
            badgeDefSVS.style.backgroundColor = "green";
          } else {
            badgeDefSVS.textContent = "";
            badgeDefSVS.style.backgroundColor = "rgb(255, 223, 148)";
          }
          return (defSPokeVS = (defSMaxPokeVS * pourcentageT) / 100);
        } else if (stat === "vit") {
          cranStatVS[4] = cranStatVS[4] - num1;
          if (cranStatVS[4] <= -6) {
            cranStatVS[4] = -6;
          }
          pourcentageT = pourcentage(cranStatVS[4], pourcentageT);
          if (cranStatVS[4] < 0) {
            badgeVitVS.textContent = "vit" + cranStatVS[4];
            badgeVitVS.style.backgroundColor = "red";
          } else if (cranStatVS[4] > 0) {
            badgeVitVS.textContent = "vit+" + cranStatVS[4];
            badgeVitVS.style.backgroundColor = "green";
          } else {
            badgeVitVS.textContent = "";
            badgeVitVS.style.backgroundColor = "rgb(255, 223, 148)";
          }
          if (statut === "Paralysie") {
            return (vitPokeVS = (vitMaxPokeVS * pourcentageT) / 100 / 2);
          } else {
            return (vitPokeVS = (vitMaxPokeVS * pourcentageT) / 100);
          }
        }
      }
    }

    // Augmentation des stats avec une attaque
    function augmenteStat(stat, num, statut) {
      let pourcentageT = 100;
      if (joueur === true) {
        if (stat === "att") {
          cranStat[0] = cranStat[0] + num;
          if (cranStat[0] >= 6) {
            cranStat[0] = 6;
          }
          pourcentageT = pourcentage(cranStat[0], pourcentageT);
          if (cranStat[0] < 0) {
            badgeAtt.textContent = "att" + cranStat[0];
            badgeAtt.style.backgroundColor = "red";
          } else if (cranStat[0] > 0) {
            badgeAtt.textContent = "att+" + cranStat[0];
            badgeAtt.style.backgroundColor = "green";
          } else {
            badgeAtt.textContent = "";
            badgeAtt.style.backgroundColor = "rgb(255, 223, 148)";
          }
          if (statut === "Br√ªlure") {
            return (attPoke = (attMaxPoke * pourcentageT) / 100 / 2);
          } else {
            return (attPoke = (attMaxPoke * pourcentageT) / 100);
          }
        } else if (stat === "def") {
          cranStat[1] = cranStat[1] + num;
          if (cranStat[1] >= 6) {
            cranStat[1] = 6;
          }
          pourcentageT = pourcentage(cranStat[1], pourcentageT);
          if (cranStat[1] < 0) {
            badgeDef.textContent = "def" + cranStat[1];
            badgeDef.style.backgroundColor = "red";
          } else if (cranStat[1] > 0) {
            badgeDef.textContent = "def+" + cranStat[1];
            badgeDef.style.backgroundColor = "green";
          } else {
            badgeDef.textContent = "";
            badgeDef.style.backgroundColor = "rgb(255, 223, 148)";
          }
          return (defPoke = (defMaxPoke * pourcentageT) / 100);
        } else if (stat === "attS") {
          cranStat[2] = cranStat[2] + num;
          if (cranStat[2] >= 6) {
            cranStat[2] = 6;
          }
          pourcentageT = pourcentage(cranStat[2], pourcentageT);
          if (cranStat[2] < 0) {
            badgeAttS.textContent = "attS" + cranStat[2];
            badgeAttS.style.backgroundColor = "red";
          } else if (cranStat[2] > 0) {
            badgeAttS.textContent = "attS+" + cranStat[2];
            badgeAttS.style.backgroundColor = "green";
          } else {
            badgeAttS.textContent = "";
            badgeAttSf.style.backgroundColor = "rgb(255, 223, 148)";
          }
          return (attSPoke = (attSMaxPoke * pourcentageT) / 100);
        } else if (stat === "defS") {
          cranStat[3] = cranStat[3] + num;
          if (cranStat[3] >= 6) {
            cranStat[3] = 6;
          }
          pourcentageT = pourcentage(cranStat[3], pourcentageT);
          if (cranStat[3] < 0) {
            badgeDefS.textContent = "defS" + cranStat[3];
            badgeDefS.style.backgroundColor = "red";
          } else if (cranStat[3] > 0) {
            badgeDefS.textContent = "defS+" + cranStat[3];
            badgeDefS.style.backgroundColor = "green";
          } else {
            badgeDefS.textContent = "";
            badgeDefS.style.backgroundColor = "rgb(255, 223, 148)";
          }
          return (defSPoke = (defSMaxPoke * pourcentageT) / 100);
        } else if (stat === "vit") {
          cranStat[4] = cranStat[4] + num;
          if (cranStat[4] >= 6) {
            cranStat[4] = 6;
          }
          pourcentageT = pourcentage(cranStat[4], pourcentageT);
          if (cranStat[4] < 0) {
            badgeVit.textContent = "vit" + cranStat[4];
            badgeVit.style.backgroundColor = "red";
          } else if (cranStat[4] > 0) {
            badgeVit.textContent = "vit+" + cranStat[4];
            badgeVit.style.backgroundColor = "green";
          } else {
            badgeVit.textContent = "";
            badgeVit.style.backgroundColor = "rgb(255, 223, 148)";
          }
          if (statut === "Paralysie") {
            return (vitPoke = (vitMaxPoke * pourcentageT) / 100 / 2);
          } else {
            return (vitPoke = (vitMaxPoke * pourcentageT) / 100);
          }
        }
      } else if (joueur === false) {
        if (stat === "att") {
          cranStatVS[0] = cranStatVS[0] + num;
          if (cranStatVS[0] >= 6) {
            cranStatVS[0] = 6;
          }
          pourcentageT = pourcentage(cranStatVS[0], pourcentageT);
          if (cranStatVS[0] < 0) {
            badgeAttVS.textContent = "att" + cranStatVS[0];
            badgeAttVS.style.backgroundColor = "red";
          } else if (cranStatVS[0] > 0) {
            badgeAttVS.textContent = "att+" + cranStatVS[0];
            badgeAttVS.style.backgroundColor = "green";
          } else {
            badgeAttVS.textContent = "";
            badgeAttVS.style.backgroundColor = "rgb(255, 223, 148)";
          }
          if (statut === "Br√ªlure") {
            return (attPokeVS = (attMaxPokeVS * pourcentageT) / 100 / 2);
          } else {
            return (attPokeVS = (attMaxPokeVS * pourcentageT) / 100);
          }
        } else if (stat === "def") {
          cranStatVS[1] = cranStatVS[1] + num;
          if (cranStatVS[1] >= 6) {
            cranStatVS[1] = 6;
          }
          pourcentageT = pourcentage(cranStatVS[1], pourcentageT);
          if (cranStatVS[1] < 0) {
            badgeDefVS.textContent = "def" + cranStatVS[1];
            badgeDefVS.style.backgroundColor = "red";
          } else if (cranStatVS[1] > 0) {
            badgeDefVS.textContent = "def+" + cranStatVS[1];
            badgeDefVS.style.backgroundColor = "green";
          } else {
            badgeDefVS.textContent = "";
            badgeDefVS.style.backgroundColor = "rgb(255, 223, 148)";
          }
          return (defPokeVS = (defMaxPokeVS * pourcentageT) / 100);
        } else if (stat === "attS") {
          cranStatVS[2] = cranStatVS[2] + num;
          if (cranStatVS[2] >= 6) {
            cranStatVS[2] = 6;
          }
          pourcentageT = pourcentage(cranStatVS[2], pourcentageT);
          if (cranStatVS[2] < 0) {
            badgeAttSVS.textContent = "attS" + cranStatVS[2];
            badgeAttSVS.style.backgroundColor = "red";
          } else if (cranStatVS[2] > 0) {
            badgeAttSVS.textContent = "attS+" + cranStatVS[2];
            badgeAttSVS.style.backgroundColor = "green";
          } else {
            badgeAttSVS.textContent = "";
            badgeAttSVS.style.backgroundColor = "rgb(255, 223, 148)";
          }
          return (attSPokeVS = (attSMaxPokeVS * pourcentageT) / 100);
        } else if (stat === "defS") {
          cranStatVS[3] = cranStatVS[3] + num;
          if (cranStatVS[3] >= 6) {
            cranStatVS[3] = 6;
          }
          pourcentageT = pourcentage(cranStatVS[3], pourcentageT);
          if (cranStatVS[3] < 0) {
            badgeDefSVS.textContent = "defS" + cranStatVS[3];
            badgeDefSVS.style.backgroundColor = "red";
          } else if (cranStatVS[3] > 0) {
            badgeDefSVS.textContent = "defS+" + cranStatVS[3];
            badgeDefSVS.style.backgroundColor = "green";
          } else {
            badgeDefSVS.textContent = "";
            badgeDefSVS.style.backgroundColor = "rgb(255, 223, 148)";
          }
          return (defSPokeVS = (defSMaxPokeVS * pourcentageT) / 100);
        } else if (stat === "vit") {
          cranStatVS[4] = cranStatVS[4] + num1;
          if (cranStatVS[4] >= 6) {
            cranStatVS[4] = 6;
          }
          pourcentageT = pourcentage(cranStatVS[4], pourcentageT);
          if (cranStatVS[4] < 0) {
            badgeVitVS.textContent = "vit" + cranStatVS[4];
            badgeVitVS.style.backgroundColor = "red";
          } else if (cranStatVS[4] > 0) {
            badgeVitVS.textContent = "vit+" + cranStatVS[4];
            badgeVitVS.style.backgroundColor = "green";
          } else {
            badgeVitVS.textContent = "";
            badgeVitVS.style.backgroundColor = "rgb(255, 223, 148)";
          }
          if (statut === "Paralysie") {
            return (vitPokeVS = (vitMaxPokeVS * pourcentageT) / 100 / 2);
          } else {
            return (vitPokeVS = (vitMaxPokeVS * pourcentageT) / 100);
          }
        }
      }
    }

    // Effet attaque
    function effetAtt(nomAttaque, num, type1, type2, type1VS, type2VS) {
      if (nomAttaque === "√Ä la Queue") {
        console.log("Rat√©...");
      } else if (nomAttaque === "Abattage") {
        if (joueur === true) {
          return (attPokeVS = baisseStat("att", 1, tabStatutPermaVS[num - 1]));
        } else if (joueur === false) {
          return (attPoke = baisseStat("att", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Ab√Æme") {
        if (joueur === true) {
          return (PVActuVS = 0);
        } else if (joueur === false) {
          return (PVActu = 0);
        }
      } else if (nomAttaque === "Aboiement") {
        if (joueur === true) {
          return (attSPokeVS = baisseStat(
            "attS",
            1,
            tabStatutPermaVS[num - 1]
          ));
        } else if (joueur === false) {
          return (attSPoke = baisseStat("attS", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Mimi-Queue") {
        if (joueur === true) {
          return (defPokeVS = baisseStat("def", 1, tabStatutPermaVS[num - 1]));
        } else if (joueur === false) {
          return (defPoke = baisseStat("def", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Danse Lames") {
        if (joueur === true) {
          return (attPoke = augmenteStat("att", 2, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (attPokeVS = augmenteStat(
            "att",
            2,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "H√¢te") {
        if (joueur === true) {
          return (vitPoke = augmenteStat("vit", 2, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (vitPokeVS = augmenteStat(
            "vit",
            2,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Toxik") {
        if (joueur === true) {
          if (
            tabStatutPermaVS[num - 1] === "Vide" &&
            type1VS !== "poison" &&
            type2VS !== "poison"
          ) {
            badgeStatutPermaPoke("Empoisonnement grave", badgeStatutVS);
            colorStatutPermaPoke("Empoisonnement grave", badgeStatutVS);
            return (tabStatutPermaVS[num - 1] = "Empoisonnement grave");
          }
        } else if (joueur === false) {
          if (
            tabStatutPerma[num - 1] === "Vide" &&
            type1VS !== "poison" &&
            type2VS !== "poison"
          ) {
            badgeStatutPermaPoke("Empoisonnement grave", badgeStatut);
            colorStatutPermaPoke("Empoisonnement grave", badgeStatut);
            return (tabStatutPerma[num - 1] = "Empoisonnement grave");
          }
        }
      } else if (nomAttaque === "Feu Follet") {
        if (joueur === true) {
          if (
            tabStatutPermaVS[num - 1] === "Vide" &&
            type1VS !== "fire" &&
            type2VS !== "fire"
          ) {
            badgeStatutPermaPoke("Br√ªlure", badgeStatutVS);
            colorStatutPermaPoke("Br√ªlure", badgeStatutVS);
            return (tabStatutPermaVS[num - 1] = "Br√ªlure");
          }
        } else if (joueur === false) {
          if (
            tabStatutPerma[num - 1] === "Vide" &&
            type1VS !== "fire" &&
            type2VS !== "fire"
          ) {
            badgeStatutPermaPoke("Br√ªlure", badgeStatut);
            colorStatutPermaPoke("Br√ªlure", badgeStatut);
            return (tabStatutPerma[num - 1] = "Br√ªlure");
          }
        }
      } else if (nomAttaque === "Poudre Dodo") {
        if (joueur === true) {
          if (tabStatutPermaVS[num - 1] === "Vide") {
            badgeStatutPermaPoke("Sommeil", badgeStatutVS);
            colorStatutPermaPoke("Sommeil", badgeStatutVS);
            return (tabStatutPermaVS[num - 1] = "Sommeil");
          }
        } else if (joueur === false) {
          if (tabStatutPerma[num - 1] === "Vide") {
            badgeStatutPermaPoke("Sommeil", badgeStatut);
            colorStatutPermaPoke("Sommeil", badgeStatut);
            return (tabStatutPerma[num - 1] = "Sommeil");
          }
        }
      } else if (
        nomAttaque === "Cage √âclair" ||
        nomAttaque === "Frotte-Frimousse" ||
        nomAttaque === "√âlecanon"
      ) {
        if (joueur === true) {
          if (
            tabStatutPermaVS[num - 1] === "Vide" &&
            type1VS !== "electric" &&
            type2VS !== "electric" &&
            type1VS !== "ground" &&
            type2VS !== "ground"
          ) {
            badgeStatutPermaPoke("Paralysie", badgeStatutVS);
            colorStatutPermaPoke("Paralysie", badgeStatutVS);
            return (tabStatutPermaVS[num - 1] = "Paralysie");
          }
        } else if (joueur === false) {
          if (
            tabStatutPerma[num - 1] === "Vide" &&
            type1 !== "electric" &&
            type2 !== "electric" &&
            type1 !== "ground" &&
            type2 !== "ground"
          ) {
            badgeStatutPermaPoke("Paralysie", badgeStatut);
            colorStatutPermaPoke("Paralysie", badgeStatut);
            return (tabStatutPerma[num - 1] = "Paralysie");
          }
        }
      } else if (nomAttaque === "Acidarmure") {
        if (joueur === true) {
          return (defPoke = augmenteStat("def", 2, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (defPokeVS = augmenteStat(
            "def",
            2,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Acide") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (joueur === true) {
          if (aleatoire === 0) {
            return (defSPokeVS = baisseStat(
              "defS",
              1,
              tabStatutPermaVS[num - 1]
            ));
          }
        } else if (joueur === false) {
          if (aleatoire === 0) {
            return (defSPoke = baisseStat("defS", 1, tabStatutPerma[num - 1]));
          }
        }
      } else if (nomAttaque === "Acide Malique") {
        if (joueur === true) {
          return (defSPokeVS = baisseStat(
            "defS",
            1,
            tabStatutPermaVS[num - 1]
          ));
        } else if (joueur === false) {
          return (defSPoke = baisseStat("defS", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Acidarmure") {
        if (joueur === true) {
          return (defPoke = augmenteStat("def", 2, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (defPokeVS = augmenteStat(
            "def",
            2,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Aff√ªtage") {
        if (joueur === true) {
          return (attPoke = augmenteStat("att", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (attPokeVS = augmenteStat(
            "att",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Amn√©sie") {
        if (joueur === true) {
          return (defSPoke = augmenteStat("defS", 2, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (defSPokeVS = augmenteStat(
            "defS",
            2,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Armure") {
        if (joueur === true) {
          return (defPoke = augmenteStat("def", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (defPokeVS = augmenteStat(
            "def",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Charme") {
        if (joueur === true) {
          return (attPokeVS = baisseStat("att", 2, tabStatutPermaVS[num - 1]));
        } else if (joueur === false) {
          return (attPoke = baisseStat("att", 2, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Chatouille") {
        if (joueur === true) {
          attPokeVS = baisseStat("att", 1, tabStatutPermaVS[num - 1]);
          return (defPokeVS = baisseStat("def", 1, tabStatutPermaVS[num - 1]));
        } else if (joueur === false) {
          attPoke = baisseStat("att", 1, tabStatutPerma[num - 1]);
          return (defPoke = baisseStat("def", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Choc √âmotionnel") {
        if (joueur === true) {
          return (attSPokeVS = baisseStat(
            "attS",
            1,
            tabStatutPermaVS[num - 1]
          ));
        } else if (joueur === false) {
          return (attSPoke = baisseStat("attS", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Cognobidon") {
        if (joueur === true) {
          pvActu = Math.round(pvActu / 2);
          return (attPoke = augmenteStat("att", 6, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          pvActuVS = Math.round(pvActuVS / 2);
          return (attPokeVS = augmenteStat(
            "att",
            6,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Confidence") {
        if (joueur === true) {
          return (attSPokeVS = baisseStat(
            "attS",
            1,
            tabStatutPermaVS[num - 1]
          ));
        } else if (joueur === false) {
          return (attSPoke = baisseStat("attS", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Coqui-Lame") {
        let aleatoire = Math.floor(Math.random() * 2);
        if (joueur === true && aleatoire === 0) {
          return (defPokeVS = baisseStat("def", 1, tabStatutPermaVS[num - 1]));
        } else if (joueur === false && aleatoire === 0) {
          return (defPoke = baisseStat("def", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Cotogarde") {
        if (joueur === true) {
          return (defPoke = augmenteStat("def", 2, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (defPokeVS = augmenteStat(
            "def",
            2,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Coup Fulgurant") {
        if (joueur === true) {
          return (defPokeVS = baisseStat("def", 1, tabStatutPermaVS[num - 1]));
        } else if (joueur === false) {
          return (defPoke = baisseStat("def", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Croc Fatal") {
        if (joueur === true) {
          return (pvActuVS = Math.floor(pvActuVS / 2));
        } else if (joueur === false) {
          return (pvActu = Math.floor(pvActu / 2));
        }
      } else if (nomAttaque === "Croco Larme") {
        if (joueur === true) {
          return (defSPokeVS = baisseStat(
            "defS",
            2,
            tabStatutPermaVS[num - 1]
          ));
        } else if (joueur === false) {
          return (defSPoke = baisseStat("defS", 2, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Croissance") {
        if (joueur === true) {
          attPoke = augmenteStat("att", 1, tabStatutPerma[num - 1]);
          return (attSPoke = augmenteStat("attS", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          attPokeVS = augmenteStat("att", 1, tabStatutPermaVS[num - 1]);
          return (attSPokeVS = augmenteStat(
            "attS",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Danse Draco") {
        if (joueur === true) {
          attPoke = augmenteStat("att", 1, tabStatutPerma[num - 1]);
          return (vitPoke = augmenteStat("vit", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          attPokeVS = augmenteStat("att", 1, tabStatutPermaVS[num - 1]);
          return (vitPokeVS = augmenteStat(
            "vit",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Danse du Feu") {
        let aleatoire = Math.floor(Math.random() * 2);
        if (joueur === true && aleatoire === 0) {
          return (attSPoke = augmenteStat("attS", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false && aleatoire === 0) {
          return (attSPokeVS = augmenteStat(
            "attS",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Destruction") {
        if (joueur === true) {
          return (pvActu = 0);
        } else if (joueur === false) {
          return (pvActuVS = 0);
        }
      } else if (nomAttaque === "Danse Plumes") {
        if (joueur === true) {
          return (attPokeVS = baisseStat("att", 2, tabStatutPermaVS[num - 1]));
        } else if (joueur === false) {
          return (attPoke = baisseStat("att", 2, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Draco-Rage") {
        if (joueur === true) {
          return (pvActuVS = pvActuVS - 40);
        } else if (joueur === false) {
          return (pvActu = pvActu - 40);
        }
      } else if (nomAttaque === "E-Coque") {
        if (joueur === true) {
          return (pvActu = pvActu + Math.floor(pv / 2));
        } else if (joueur === false) {
          return (pvActuVS = pvActuVS + Math.floor(pvVS / 2));
        }
      } else if (nomAttaque === "Effort") {
        if (joueur === true) {
          return (pvActuVS = pvActu);
        } else if (joueur === false) {
          return (pvActu = pvActuVS);
        }
      } else if (nomAttaque === "Empal'Korne") {
        if (joueur === true) {
          return (PVActuVS = 0);
        } else if (joueur === false) {
          return (PVActu = 0);
        }
      } else if (nomAttaque === "Explosion") {
        if (joueur === true) {
          return (pvActu = 0);
        } else if (joueur === false) {
          return (pvActuVS = 0);
        }
      } else if (nomAttaque === "Pl√©nitude") {
        if (joueur === true) {
          attSPoke = augmenteStat("attS", 1, tabStatutPerma[num - 1]);
          return (defSPoke = augmenteStat("defS", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          attSPokeVS = augmenteStat("attS", 1, tabStatutPermaVS[num - 1]);
          return (defSPokeVS = augmenteStat(
            "defS",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Poing Boost") {
        if (joueur === true) {
          return (attPoke = augmenteStat("att", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (attPokeVS = augmenteStat(
            "att",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Poing M√©t√©ore") {
        let aleatoire = Math.floor(Math.random() * 6);
        if (joueur === true && aleatoire === 0) {
          return (attPoke = augmenteStat("att", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false && aleatoire === 0) {
          return (attPokeVS = augmenteStat(
            "att",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Poliroche") {
        if (joueur === true) {
          return (vitPoke = augmenteStat("vit", 2, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (vitPokeVS = augmenteStat(
            "vit",
            2,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Pouvoir Antique") {
        let aleatoire = Math.floor(Math.random() * 11);
        if (joueur === true && aleatoire === 0) {
          attPoke = augmenteStat("att", 1, tabStatutPerma[num - 1]);
          attSPoke = augmenteStat("attS", 1, tabStatutPerma[num - 1]);
          defPoke = augmenteStat("def", 1, tabStatutPerma[num - 1]);
          defSPoke = augmenteStat("defS", 1, tabStatutPerma[num - 1]);
          return (vitPoke = augmenteStat("vit", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false && aleatoire === 0) {
          attPokeVS = augmenteStat("att", 1, tabStatutPermaVS[num - 1]);
          attSPokeVS = augmenteStat("attS", 1, tabStatutPermaVS[num - 1]);
          defPokeVS = augmenteStat("def", 1, tabStatutPermaVS[num - 1]);
          defSPokeVS = augmenteStat("defS", 1, tabStatutPermaVS[num - 1]);
          return (vitPokeVS = augmenteStat(
            "vit",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Rayon Charg√©") {
        let aleatoire = Math.floor(Math.random() * 11);
        if (
          joueur === true &&
          aleatoire >= 0 &&
          aleatoire < 8 &&
          type1VS !== "ground" &&
          type2VS !== "ground"
        ) {
          return (attSPoke = augmenteStat("attS", 1, tabStatutPerma[num - 1]));
        } else if (
          joueur === false &&
          aleatoire >= 0 &&
          aleatoire < 8 &&
          type1 !== "ground" &&
          type2 !== "ground"
        ) {
          return (attSPokeVS = augmenteStat(
            "attS",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Rengorgement") {
        if (joueur === true) {
          attPoke = augmenteStat("att", 1, tabStatutPerma[num - 1]);
          return (attSPoke = augmenteStat("attS", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          attPokeVS = augmenteStat("att", 1, tabStatutPermaVS[num - 1]);
          return (attSPokeVS = augmenteStat(
            "attS",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Repli") {
        if (joueur === true) {
          return (defPoke = augmenteStat("def", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (defPokeVS = augmenteStat(
            "def",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Roue Libre") {
        // Type?
        if (joueur === true) {
          return (vitPoke = augmenteStat("vit", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (vitPokeVS = augmenteStat(
            "vit",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Vent Argent√©") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (joueur === true && aleatoire === 0) {
          attPoke = augmenteStat("att", 1, tabStatutPerma[num - 1]);
          attSPoke = augmenteStat("attS", 1, tabStatutPerma[num - 1]);
          defPoke = augmenteStat("def", 1, tabStatutPerma[num - 1]);
          defSPoke = augmenteStat("defS", 1, tabStatutPerma[num - 1]);
          return (vitPoke = augmenteStat("vit", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false && aleatoire === 0) {
          attPokeVS = augmenteStat("att", 1, tabStatutPermaVS[num - 1]);
          attSPokeVS = augmenteStat("attS", 1, tabStatutPermaVS[num - 1]);
          defPokeVS = augmenteStat("def", 1, tabStatutPermaVS[num - 1]);
          defSPokeVS = augmenteStat("defS", 1, tabStatutPermaVS[num - 1]);
          return (vitPokeVS = augmenteStat(
            "vit",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Vent Mauvais") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (joueur === true && aleatoire === 0) {
          attPoke = augmenteStat("att", 1, tabStatutPerma[num - 1]);
          attSPoke = augmenteStat("attS", 1, tabStatutPerma[num - 1]);
          defPoke = augmenteStat("def", 1, tabStatutPerma[num - 1]);
          defSPoke = augmenteStat("defS", 1, tabStatutPerma[num - 1]);
          return (vitPoke = augmenteStat("vit", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false && aleatoire === 0) {
          attPokeVS = augmenteStat("att", 1, tabStatutPermaVS[num - 1]);
          attSPokeVS = augmenteStat("attS", 1, tabStatutPermaVS[num - 1]);
          defPokeVS = augmenteStat("def", 1, tabStatutPermaVS[num - 1]);
          defSPokeVS = augmenteStat("defS", 1, tabStatutPermaVS[num - 1]);
          return (vitPokeVS = augmenteStat(
            "vit",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Yoga") {
        if (joueur === true) {
          return (attPoke = augmenteStat("att", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (attPokeVS = augmenteStat(
            "att",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Papillodanse") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (joueur === true && aleatoire === 0) {
          attSPoke = augmenteStat("attS", 1, tabStatutPerma[num - 1]);
          defSPoke = augmenteStat("defS", 1, tabStatutPerma[num - 1]);
          return (vitPoke = augmenteStat("vit", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false && aleatoire === 0) {
          attSPokeVS = augmenteStat("attS", 1, tabStatutPermaVS[num - 1]);
          defSPokeVS = augmenteStat("defS", 1, tabStatutPermaVS[num - 1]);
          return (vitPokeVS = augmenteStat(
            "vit",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Orage Adamantin") {
        let aleatoire = Math.floor(Math.random() * 2);
        if (joueur === true && aleatoire === 0) {
          return (defPoke = augmenteStat("def", 2, tabStatutPerma[num - 1]));
        } else if (joueur === false && aleatoire === 0) {
          return (defPokeVS = augmenteStat(
            "def",
            2,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Nitrocharge") {
        if (joueur === true) {
          return (vitPoke = augmenteStat("vit", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (vitPokeVS = augmenteStat(
            "vit",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Mur de Fer") {
        if (joueur === true) {
          return (defPoke = augmenteStat("def", 2, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (defPokeVS = augmenteStat(
            "def",
            2,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Machination") {
        if (joueur === true) {
          return (attSPoke = augmenteStat("attS", 2, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (attSPokeVS = augmenteStat(
            "attS",
            2,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Lumi-Queue") {
        if (joueur === true) {
          return (attSPoke = augmenteStat("attS", 3, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (attSPokeVS = augmenteStat(
            "attS",
            3,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Grondement") {
        if (joueur === true) {
          return (attPoke = augmenteStat("att", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (attPokeVS = augmenteStat(
            "att",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Griffe Acier") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (joueur === true && aleatoire === 0) {
          return (attPoke = augmenteStat("att", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false && aleatoire === 0) {
          return (attPokeVS = augmenteStat(
            "att",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Force Cosmique") {
        if (joueur === true) {
          defSPoke = augmenteStat("defS", 1, tabStatutPerma[num - 1]);
          return (defPoke = augmenteStat("def", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          defSPokeVS = augmenteStat("defS", 1, tabStatutPermaVS[num - 1]);
          return (defPokeVS = augmenteStat(
            "def",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Dracacophonie") {
        if (joueur === true) {
          pvActu = pvActu + Math.floor(pv / 3);
          attPoke = augmenteStat("att", 1, tabStatutPerma[num - 1]);
          attSPoke = augmenteStat("attS", 1, tabStatutPerma[num - 1]);
          defPoke = augmenteStat("def", 1, tabStatutPerma[num - 1]);
          defSPoke = augmenteStat("defS", 1, tabStatutPerma[num - 1]);
          return (vitPoke = augmenteStat("vit", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          pvActuVS = pvActuVS + Math.floor(pvVS / 3);
          attPokeVS = augmenteStat("att", 1, tabStatutPermaVS[num - 1]);
          attSPokeVS = augmenteStat("attS", 1, tabStatutPermaVS[num - 1]);
          defPokeVS = augmenteStat("def", 1, tabStatutPermaVS[num - 1]);
          defSPokeVS = augmenteStat("defS", 1, tabStatutPermaVS[num - 1]);
          return (vitPokeVS = augmenteStat(
            "vit",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Dard Mortel") {
        if (joueur === true && PVActuVS === 0) {
          return (attPoke = augmenteStat("att", 3, tabStatutPerma[num - 1]));
        } else if (joueur === false && PVActu === 0) {
          return (attPokeVS = augmenteStat(
            "att",
            3,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Chgt Vitesse") {
        if (joueur === true) {
          vitPoke = augmenteStat("vit", 2, tabStatutPerma[num - 1]);
          return (attPoke = augmenteStat("att", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          vitPokeVS = augmenteStat("vit", 2, tabStatutPermaVS[num - 1]);
          return (attPokeVS = augmenteStat(
            "att",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Boul'Armure") {
        if (joueur === true) {
          return (defPoke = augmenteStat("def", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (defPokeVS = augmenteStat(
            "def",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Bouclier") {
        if (joueur === true) {
          return (defPoke = augmenteStat("def", 2, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          return (defPokeVS = augmenteStat(
            "def",
            2,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Bouclier") {
        if (joueur === true) {
          defSPoke = augmenteStat("defS", 1, tabStatutPerma[num - 1]);
          return (defPoke = augmenteStat("def", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false) {
          defSPokeVS = augmenteStat("defS", 1, tabStatutPermaVS[num - 1]);
          return (defPokeVS = augmenteStat(
            "def",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "Ailes d'Acier") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (joueur === true && aleatoire === 0) {
          return (defPoke = augmenteStat("def", 1, tabStatutPerma[num - 1]));
        } else if (joueur === false && aleatoire === 0) {
          return (defPokeVS = augmenteStat(
            "def",
            1,
            tabStatutPermaVS[num - 1]
          ));
        }
      } else if (nomAttaque === "√àre Glaciaire") {
        if (joueur === true) {
          return (vitPokeVS = baisseStat("vit", 1, tabStatutPermaVS[num - 1]));
        } else if (joueur === false) {
          return (vitPoke = baisseStat("vit", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Grimace") {
        if (joueur === true) {
          return (vitPokeVS = baisseStat("vit", 2, tabStatutPermaVS[num - 1]));
        } else if (joueur === false) {
          return (vitPoke = baisseStat("vit", 2, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Grincement") {
        if (joueur === true) {
          return (defPokeVS = baisseStat("def", 2, tabStatutPermaVS[num - 1]));
        } else if (joueur === false) {
          return (defPoke = baisseStat("def", 2, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Groz'Yeux") {
        if (joueur === true) {
          return (defPokeVS = baisseStat("def", 1, tabStatutPermaVS[num - 1]));
        } else if (joueur === false) {
          return (defPoke = baisseStat("def", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Groz'Yeux") {
        if (joueur === true) {
          return (defSPokeVS = baisseStat(
            "defS",
            1,
            tabStatutPermaVS[num - 1]
          ));
        } else if (joueur === false) {
          return (defSPoke = baisseStat("defS", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Tir de Boue") {
        if (joueur === true) {
          return (vitPokeVS = baisseStat("vit", 1, tabStatutPermaVS[num - 1]));
        } else if (joueur === false) {
          return (vitPoke = baisseStat("vit", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Tomberoche") {
        if (joueur === true) {
          return (vitPokeVS = baisseStat("vit", 1, tabStatutPermaVS[num - 1]));
        } else if (joueur === false) {
          return (vitPoke = baisseStat("vit", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Vent Glace") {
        if (joueur === true) {
          return (vitPokeVS = baisseStat("vit", 1, tabStatutPermaVS[num - 1]));
        } else if (joueur === false) {
          return (vitPoke = baisseStat("vit", 1, tabStatutPerma[num - 1]));
        }
      } else if (
        nomAttaque === "Tonnerre" ||
        nomAttaque === "Poing √âclair" ||
        nomAttaque === "√âclair"
      ) {
        let aleatoire = Math.floor(Math.random() * 10);
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "electric" &&
          type2VS !== "electric" &&
          type1VS !== "ground" &&
          type2VS !== "ground" &&
          aleatoire === 0
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatutVS);
          colorStatutPermaPoke("Paralysie", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Paralysie");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "electric" &&
          type2 !== "electric" &&
          type1 !== "ground" &&
          type2 !== "ground" &&
          aleatoire === 0
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatut);
          colorStatutPermaPoke("Paralysie", badgeStatut);
          return (tabStatutPerma[num - 1] = "Paralysie");
        }
      } else if (nomAttaque === "Plaquage" || nomAttaque === "Forte-Paume") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (
          joueur === true &&
          aleatoire >= 0 &&
          aleatoire < 3 &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "electric" &&
          type2VS !== "electric" &&
          type1VS !== "ghost" &&
          type2VS !== "ghost"
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatutVS);
          colorStatutPermaPoke("Paralysie", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Paralysie");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "electric" &&
          type2 !== "electric" &&
          type1 !== "ghost" &&
          type2 !== "ghost" &&
          aleatoire >= 0 &&
          aleatoire < 3
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatut);
          colorStatutPermaPoke("Paralysie", badgeStatut);
          return (tabStatutPerma[num - 1] = "Paralysie");
        }
      } else if (nomAttaque === "Regard M√©dusant") {
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "electric" &&
          type2VS !== "electric"
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatutVS);
          colorStatutPermaPoke("Paralysie", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Paralysie");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "electric" &&
          type2 !== "electric"
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatut);
          colorStatutPermaPoke("Paralysie", badgeStatut);
          return (tabStatutPerma[num - 1] = "Paralysie");
        }
      } else if (nomAttaque === "Para-Spore") {
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "electric" &&
          type2VS !== "electric" &&
          type1VS !== "grass" &&
          type2VS !== "grass"
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatutVS);
          colorStatutPermaPoke("Paralysie", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Paralysie");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "electric" &&
          type2 !== "electric" &&
          type1VS !== "grass" &&
          type2VS !== "grass"
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatut);
          colorStatutPermaPoke("Paralysie", badgeStatut);
          return (tabStatutPerma[num - 1] = "Paralysie");
        }
      } else if (nomAttaque === "L√©chouille") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "electric" &&
          type2VS !== "electric" &&
          type1VS !== "normal" &&
          type2VS !== "normal" &&
          aleatoire >= 0 &&
          aleatoire < 3
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatutVS);
          colorStatutPermaPoke("Paralysie", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Paralysie");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "electric" &&
          type2 !== "electric" &&
          type1 !== "normal" &&
          type2 !== "normal" &&
          aleatoire >= 0 &&
          aleatoire < 3
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatut);
          colorStatutPermaPoke("Paralysie", badgeStatut);
          return (tabStatutPerma[num - 1] = "Paralysie");
        }
      } else if (
        nomAttaque === "Fatal-Foudre" ||
        nomAttaque === "√âtincelle" ||
        nomAttaque === "Coup d'Jus"
      ) {
        let aleatoire = Math.floor(Math.random() * 10);
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "electric" &&
          type2VS !== "electric" &&
          type1VS !== "ground" &&
          type2VS !== "ground" &&
          aleatoire >= 0 &&
          aleatoire < 3
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatutVS);
          colorStatutPermaPoke("Paralysie", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Paralysie");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "electric" &&
          type2 !== "electric" &&
          type1 !== "ground" &&
          type2 !== "ground" &&
          aleatoire >= 0 &&
          aleatoire < 3
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatut);
          colorStatutPermaPoke("Paralysie", badgeStatut);
          return (tabStatutPerma[num - 1] = "Paralysie");
        }
      } else if (nomAttaque === "√âlectacle") {
        // let aleatoire = Math.floor(Math.random() * 10);
        // if (
        //   joueur === true &&
        //   tabStatutPermaVS[num - 1] === "Vide" &&
        //   type1VS !== "electric" &&
        //   type2VS !== "electric" &&
        //   type1VS !== "ground" &&
        //   type2VS !== "ground" &&
        //   aleatoire === 0
        // ) {
        //   badgeStatutPermaPoke("Paralysie", badgeStatutVS);
        //   colorStatutPermaPoke("Paralysie", badgeStatutVS);
        //   pvActu = Math.round(
        //     pvActu -
        //       (((42 * attaque * degatAtt) / (defenseVS * 50) + 2) *
        //         bonusType *
        //         (efficace1 * efficace2)) /
        //         3
        //   );
        //   return (tabStatutPermaVS[num - 1] = "Paralysie");
        // } else if (
        //   joueur === false &&
        //   tabStatutPerma[num - 1] === "Vide" &&
        //   type1 !== "electric" &&
        //   type2 !== "electric" &&
        //   type1 !== "ground" &&
        //   type2 !== "ground" &&
        //   aleatoire === 0
        // ) {
        //   badgeStatutPermaPoke("Paralysie", badgeStatut);
        //   colorStatutPermaPoke("Paralysie", badgeStatut);
        //   pvActuVS =
        //     pvActuVS -
        //     Math.round(
        //       (((42 * attaqueVS * attaque_dmg1VS) / (defense * 50) + 2) *
        //         bonusTypeVS *
        //         (efficace1VS * efficace2VS)) /
        //         3
        //     );
        //   return (tabStatutPerma[num - 1] = "Paralysie");
        // }
      } else if (nomAttaque === "√âcume") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (joueur === true && aleatoire === 0) {
          return (vitPokeVS = baisseStat("vit", 1, tabStatutPermaVS[num - 1]));
        } else if (joueur === false && aleatoire === 0) {
          return (vitPoke = baisseStat("vit", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Draco-Souffle") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "electric" &&
          type2VS !== "electric" &&
          type1VS !== "fairy" &&
          type2VS !== "fairy" &&
          aleatoire >= 0 &&
          aleatoire < 3
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatutVS);
          colorStatutPermaPoke("Paralysie", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Paralysie");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "electric" &&
          type2 !== "electric" &&
          type1 !== "fairy" &&
          type2 !== "fairy" &&
          aleatoire >= 0 &&
          aleatoire < 3
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatut);
          colorStatutPermaPoke("Paralysie", badgeStatut);
          return (tabStatutPerma[num - 1] = "Paralysie");
        }
      } else if (nomAttaque === "Charge Foudre") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "electric" &&
          type2VS !== "electric" &&
          type1VS !== "ground" &&
          type2VS !== "ground" &&
          aleatoire >= 0 &&
          aleatoire < 2
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatutVS);
          colorStatutPermaPoke("Paralysie", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Paralysie");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "electric" &&
          type2 !== "electric" &&
          type1 !== "ground" &&
          type2 !== "ground" &&
          aleatoire >= 0 &&
          aleatoire < 2
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatut);
          colorStatutPermaPoke("Paralysie", badgeStatut);
          return (tabStatutPerma[num - 1] = "Paralysie");
        }
      } else if (nomAttaque === "Triplattaque") {
        let aleatoire = Math.floor(Math.random() * 10);
        console.log("aleatoire", aleatoire);
        let aleatoire2 = Math.floor(Math.random() * 3);
        console.log("aleatoire2", aleatoire2);
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "electric" &&
          type2VS !== "electric" &&
          aleatoire >= 0 &&
          aleatoire < 2 &&
          aleatoire2 === 0
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatutVS);
          colorStatutPermaPoke("Paralysie", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Paralysie");
        } else if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "fire" &&
          type2VS !== "fire" &&
          aleatoire >= 0 &&
          aleatoire < 2 &&
          aleatoire2 === 1
        ) {
          badgeStatutPermaPoke("Br√ªlure", badgeStatutVS);
          colorStatutPermaPoke("Br√ªlure", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Br√ªlure");
        } else if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "ice" &&
          type2VS !== "ice" &&
          aleatoire >= 0 &&
          aleatoire < 2 &&
          aleatoire2 === 2
        ) {
          badgeStatutPermaPoke("Gel", badgeStatutVS);
          colorStatutPermaPoke("Gel", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Gel");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "electric" &&
          type2 !== "electric" &&
          aleatoire >= 0 &&
          aleatoire < 2 &&
          aleatoire2 === 0
        ) {
          badgeStatutPermaPoke("Paralysie", badgeStatut);
          colorStatutPermaPoke("Paralysie", badgeStatut);
          return (tabStatutPerma[num - 1] = "Paralysie");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "fire" &&
          type2 !== "fire" &&
          aleatoire >= 0 &&
          aleatoire < 2 &&
          aleatoire2 === 1
        ) {
          badgeStatutPermaPoke("Br√ªlure", badgeStatut);
          colorStatutPermaPoke("Br√ªlure", badgeStatut);
          return (tabStatutPerma[num - 1] = "Br√ªlure");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "ice" &&
          type2 !== "ice" &&
          aleatoire >= 0 &&
          aleatoire < 2 &&
          aleatoire2 === 2
        ) {
          badgeStatutPermaPoke("Gel", badgeStatut);
          colorStatutPermaPoke("Gel", badgeStatut);
          return (tabStatutPerma[num - 1] = "Gel");
        }
      } else if (
        nomAttaque === "Ballon Br√ªlant" ||
        nomAttaque === "Canicule" ||
        nomAttaque === "D√©flagration" ||
        nomAttaque === "Flamm√®che" ||
        nomAttaque === "Lance-Flammes" ||
        nomAttaque === "Pied Br√ªleur" ||
        nomAttaque === "Poing Feu" ||
        nomAttaque === "Roue de Feu"
      ) {
        let aleatoire = Math.floor(Math.random() * 10);
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "fire" &&
          type2VS !== "fire" &&
          aleatoire === 0
        ) {
          badgeStatutPermaPoke("Br√ªlure", badgeStatutVS);
          colorStatutPermaPoke("Br√ªlure", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Br√ªlure");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "fire" &&
          type2 !== "fire" &&
          aleatoire === 0
        ) {
          badgeStatutPermaPoke("Br√ªlure", badgeStatut);
          colorStatutPermaPoke("Br√ªlure", badgeStatut);
          return (tabStatutPerma[num - 1] = "Br√ªlure");
        }
      } else if (nomAttaque === "Boutefeu") {
        // let aleatoire = Math.floor(Math.random() * 10);
        // if (
        //   joueur === true &&
        //   tabStatutPermaVS[num - 1] === "Vide" &&
        //   type1VS !== "fire" &&
        //   type2VS !== "fire"
        // ) {
        //   if (aleatoire === 0) {
        //     badgeStatutPermaPoke("Br√ªlure", badgeStatutVS);
        //     colorStatutPermaPoke("Br√ªlure", badgeStatutVS);
        //     tabStatutPermaVS[num - 1] = "Br√ªlure";
        //   }
        //   return (pvActu = Math.round(
        //     pvActu -
        //       (((42 * attaque * degatAtt) / (defenseVS * 50) + 2) *
        //         bonusType *
        //         (efficace1 * efficace2)) /
        //         3
        //   ));
        // } else if (
        //   joueur === false &&
        //   tabStatutPerma[num - 1] === "Vide" &&
        //   type1 !== "fire" &&
        //   type2 !== "fire" &&
        //   aleatoire === 0
        // ) {
        //   badgeStatutPermaPoke("Br√ªlure", badgeStatut);
        //   colorStatutPermaPoke("Br√ªlure", badgeStatut);
        //   pvActuVS =
        //     pvActuVS -
        //     Math.round(
        //       (((42 * attaqueVS * attaque_dmg1VS) / (defense * 50) + 2) *
        //         bonusTypeVS *
        //         (efficace1VS * efficace2VS)) /
        //         3
        //     );
        //   return (tabStatutPerma[num - 1] = "Br√ªlure");
        // }
      } else if (nomAttaque === "√àre Glaciaire") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (joueur === true && aleatoire === 0) {
          return (defSPokeVS = baisseStat(
            "defS",
            1,
            tabStatutPermaVS[num - 1]
          ));
        } else if (joueur === false && aleatoire === 0) {
          return (defSPoke = baisseStat("defS", 1, tabStatutPerma[num - 1]));
        }
      } else if (
        nomAttaque === "√âbullilave" ||
        nomAttaque === "√âbullition" ||
        nomAttaque === "Incendie" ||
        nomAttaque === "Jet de Vapeur" ||
        nomAttaque === "Sable Ardent"
      ) {
        let aleatoire = Math.floor(Math.random() * 10);
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "fire" &&
          type2VS !== "fire" &&
          aleatoire >= 0 &&
          aleatoire < 3
        ) {
          badgeStatutPermaPoke("Br√ªlure", badgeStatutVS);
          colorStatutPermaPoke("Br√ªlure", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Br√ªlure");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "fire" &&
          type2 !== "fire" &&
          aleatoire >= 0 &&
          aleatoire < 3
        ) {
          badgeStatutPermaPoke("Br√ªlure", badgeStatut);
          colorStatutPermaPoke("Br√ªlure", badgeStatut);
          return (tabStatutPerma[num - 1] = "Br√ªlure");
        }
      } else if (nomAttaque === "Feu Sacr√©") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "fire" &&
          type2VS !== "fire" &&
          aleatoire >= 0 &&
          aleatoire < 5
        ) {
          badgeStatutPermaPoke("Br√ªlure", badgeStatutVS);
          colorStatutPermaPoke("Br√ªlure", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Br√ªlure");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "fire" &&
          type2 !== "fire" &&
          aleatoire >= 0 &&
          aleatoire < 5
        ) {
          badgeStatutPermaPoke("Br√ªlure", badgeStatut);
          colorStatutPermaPoke("Br√ªlure", badgeStatut);
          return (tabStatutPerma[num - 1] = "Br√ªlure");
        }
      } else if (nomAttaque === "Flamme Bleue") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "fire" &&
          type2VS !== "fire" &&
          aleatoire >= 0 &&
          aleatoire < 2
        ) {
          badgeStatutPermaPoke("Br√ªlure", badgeStatutVS);
          colorStatutPermaPoke("Br√ªlure", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Br√ªlure");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "fire" &&
          type2 !== "fire" &&
          aleatoire >= 0 &&
          aleatoire < 2
        ) {
          badgeStatutPermaPoke("Br√ªlure", badgeStatut);
          colorStatutPermaPoke("Br√ªlure", badgeStatut);
          return (tabStatutPerma[num - 1] = "Br√ªlure");
        }
      } else if (nomAttaque === "Feu Ensorcel√©") {
        if (joueur === true) {
          return (attSPokeVS = baisseStat(
            "attS",
            1,
            tabStatutPermaVS[num - 1]
          ));
        } else if (joueur === false) {
          return (attSPoke = baisseStat("attS", 1, tabStatutPerma[num - 1]));
        }
      } else if (nomAttaque === "Bombe Acide") {
        if (joueur === true) {
          return (defSPokeVS = baisseStat(
            "defS",
            2,
            tabStatutPermaVS[num - 1]
          ));
        } else if (joueur === false) {
          return (defSPoke = baisseStat("defS", 2, tabStatutPerma[num - 1]));
        }
      } else if (
        nomAttaque === "Bombe Beurk" ||
        nomAttaque === "Dard-Venin" ||
        nomAttaque === "D√©tricanon" ||
        nomAttaque === "D√©tritus" ||
        nomAttaque === "Direct Toxik"
      ) {
        let aleatoire = Math.floor(Math.random() * 10);
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "poison" &&
          type2VS !== "poison" &&
          type1VS !== "steel" &&
          type2VS !== "steel" &&
          aleatoire >= 0 &&
          aleatoire < 3
        ) {
          badgeStatutPermaPoke("Empoisonnement normal", badgeStatutVS);
          colorStatutPermaPoke("Empoisonnement normal", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Empoisonnement normal");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "poison" &&
          type2 !== "poison" &&
          type1 !== "steel" &&
          type2 !== "steel" &&
          aleatoire >= 0 &&
          aleatoire < 3
        ) {
          badgeStatutPermaPoke("Empoisonnement normal", badgeStatut);
          colorStatutPermaPoke("Empoisonnement normal", badgeStatut);
          return (tabStatutPerma[num - 1] = "Empoisonnement normal");
        }
      } else if (nomAttaque === "Cradovague") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (joueur === true) {
          if (
            tabStatutPermaVS[num - 1] === "Vide" &&
            type1VS !== "poison" &&
            type2VS !== "poison" &&
            type1VS !== "steel" &&
            type2VS !== "steel" &&
            aleatoire === 0
          ) {
            badgeStatutPermaPoke("Empoisonnement normal", badgeStatutVS);
            colorStatutPermaPoke("Empoisonnement normal", badgeStatutVS);
            return (tabStatutPermaVS[num - 1] = "Empoisonnement normal");
          }
        } else if (joueur === false) {
          if (
            tabStatutPerma[num - 1] === "Vide" &&
            type1 !== "poison" &&
            type2 !== "poison" &&
            type1 !== "steel" &&
            type2 !== "steel" &&
            aleatoire === 0
          ) {
            badgeStatutPermaPoke("Empoisonnement normal", badgeStatut);
            colorStatutPermaPoke("Empoisonnement normal", badgeStatut);
            return (tabStatutPerma[num - 1] = "Empoisonnement normal");
          }
        }
      } else if (nomAttaque === "Crochet Venin") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "poison" &&
          type2VS !== "poison" &&
          type1VS !== "steel" &&
          type2VS !== "steel" &&
          aleatoire >= 0 &&
          aleatoire < 5
        ) {
          badgeStatutPermaPoke("Empoisonnement grave", badgeStatutVS);
          colorStatutPermaPoke("Empoisonnement grave", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Empoisonnement grave");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "poison" &&
          type2 !== "poison" &&
          type1 !== "steel" &&
          type2 !== "steel" &&
          aleatoire >= 0 &&
          aleatoire < 5
        ) {
          badgeStatutPermaPoke("Empoisonnement grave", badgeStatut);
          colorStatutPermaPoke("Empoisonnement grave", badgeStatut);
          return (tabStatutPerma[num - 1] = "Empoisonnement grave");
        }
      } else if (nomAttaque === "Fil Toxique") {
        // baisse de vit m√™me si pas empoisonn√©?
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "poison" &&
          type2VS !== "poison" &&
          type1VS !== "steel" &&
          type2VS !== "steel"
        ) {
          badgeStatutPermaPoke("Empoisonnement normal", badgeStatutVS);
          colorStatutPermaPoke("Empoisonnement normal", badgeStatutVS);
          vitPoke = baisseStat("vit", 1, tabStatutPermaVS[num - 1]);
          return (tabStatutPermaVS[num - 1] = "Empoisonnement normal");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "poison" &&
          type2 !== "poison" &&
          type1 !== "steel" &&
          type2 !== "steel"
        ) {
          badgeStatutPermaPoke("Empoisonnement normal", badgeStatut);
          colorStatutPermaPoke("Empoisonnement normal", badgeStatut);
          vitPoke = baisseStat("vit", 1, tabStatutPerma[num - 1]);
          return (tabStatutPerma[num - 1] = "Empoisonnement normal");
        }
      } else if (nomAttaque === "Gaz Toxik" || nomAttaque === "Poudre Toxik") {
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "poison" &&
          type2VS !== "poison" &&
          type1VS !== "steel" &&
          type2VS !== "steel"
        ) {
          badgeStatutPermaPoke("Empoisonnement normal", badgeStatutVS);
          colorStatutPermaPoke("Empoisonnement normal", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Empoisonnement normal");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "poison" &&
          type2 !== "poison" &&
          type1 !== "steel" &&
          type2 !== "steel"
        ) {
          badgeStatutPermaPoke("Empoisonnement normal", badgeStatut);
          colorStatutPermaPoke("Empoisonnement normal", badgeStatut);
          return (tabStatutPerma[num - 1] = "Empoisonnement normal");
        }
      } else if (nomAttaque === "Pur√©dpois") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (
          joueur === true &&
          tabStatutPermaVS[num - 1] === "Vide" &&
          type1VS !== "poison" &&
          type2VS !== "poison" &&
          type1VS !== "steel" &&
          type2VS !== "steel" &&
          aleatoire >= 0 &&
          aleatoire < 4
        ) {
          badgeStatutPermaPoke("Empoisonnement normal", badgeStatutVS);
          colorStatutPermaPoke("Empoisonnement normal", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Empoisonnement normal");
        } else if (
          joueur === false &&
          tabStatutPerma[num - 1] === "Vide" &&
          type1 !== "poison" &&
          type2 !== "poison" &&
          type1 !== "steel" &&
          type2 !== "steel" &&
          aleatoire >= 0 &&
          aleatoire < 4
        ) {
          badgeStatutPermaPoke("Empoisonnement normal", badgeStatut);
          colorStatutPermaPoke("Empoisonnement normal", badgeStatut);
          return (tabStatutPerma[num - 1] = "Empoisonnement normal");
        }
      } else if (nomAttaque === "Chant Antique") {
        let aleatoire = Math.floor(Math.random() * 10);
        if (
          joueur === true &&
          aleatoire === 0 &&
          type1VS !== "ghost" &&
          type2VS !== "ghost" &&
          tabStatutPermaVS[num - 1] === "Vide"
        ) {
          badgeStatutPermaPoke("Sommeil", badgeStatutVS);
          colorStatutPermaPoke("Sommeil", badgeStatutVS);
          return (tabStatutPermaVS[num - 1] = "Sommeil");
        } else if (
          joueur === false &&
          aleatoire === 0 &&
          type1 !== "ghost" &&
          type2 !== "ghost" &&
          tabStatutPerma[num - 1] === "Vide"
        ) {
          badgeStatutPermaPoke("Sommeil", badgeStatut);
          colorStatutPermaPoke("Sommeil", badgeStatut);
          return (tabStatutPerma[num - 1] = "Sommeil");
        }
      }
    }

    function attaquePrioPoke(nomAttaque) {
      if (nomAttaque === "D√©tection") {
        let aleatoire = Math.floor(Math.random() * 2);
        if (joueur === true) {
          // if (derniereAttaque === "D√©tection") {
          //   if (aleatoire === 0) {
          //     return console.log("Rat√©");
          //   } else {
          //     return (efficace1VS = 0);
          //   }
          // } else {
          efficace1VS = 0;
          return console.log("efficace1VS detection", efficace1VS);
          // }
        } else if (joueur === false) {
          if (derniereAttaqueVS === "D√©tection") {
            if (aleatoire === 0) {
              return console.log("Rat√©");
            } else {
              return (efficace1 = 0);
            }
          } else {
            return (efficace1 = 0);
          }
        }
      } else if (nomAttaque === "Abri") {
        let aleatoire = Math.floor(Math.random() * 2);
        if (joueur === true) {
          if (derniereAttaque === "Abri") {
            if (aleatoire === 0) {
              return console.log("Rat√©");
            } else {
              return (efficace1VS = 0);
            }
          } else {
            return (efficace1VS = 0);
          }
        } else if (joueur === false) {
          if (derniereAttaqueVS === "Abri") {
            if (aleatoire === 0) {
              return console.log("Rat√©");
            } else {
              return (efficace1 = 0);
            }
          } else {
            return (efficace1 = 0);
          }
        }
      }
    }

    // Effet Statuts
    const badgeStatutVS = document.getElementById("statutVS");
    const badgeStatut = document.getElementById("statut");

    function statutD√©butPermaPoke(
      statut,
      statAtt,
      statVit,
      stat0,
      count,
      countBru,
      countPara,
      nomAttaque,
      nomAttaqueVS,
      typeAttaqueVS
    ) {
      console.log("statAttStatutD√©butPermaPoke", statAtt);
      let resultatStatut = {};
      if (statut === "Br√ªlure") {
        if (countBru === 0) {
          statAtt = statAtt / 2;
          countBru = 1;
        }
        return (resultatStatut = {
          statAtt,
          countBru,
          count,
          stat0,
          statut: "Br√ªlure",
          countPara,
          statVit,
        });
      } else if (statut === "Gel") {
        if (count < 5) {
          let aleatoire = Math.floor(Math.random() * 5);
          if (
            aleatoire === 0 ||
            count === 5 ||
            nomAttaque === "Roue de feu" ||
            nomAttaque === "Feu sacr√©" ||
            nomAttaque === "Boutefeu" ||
            nomAttaque === "Ebullition" ||
            nomAttaque === "Flamme croix" ||
            typeAttaqueVS === "fire" ||
            nomAttaqueVS === "Ebullition"
          ) {
            return (resultatStatut = {
              statAtt,
              countBru,
              count,
              stat0,
              statut: "Vide",
              countPara,
              statVit,
            });
          } else {
            count = count + 1;
            stat0 = 0;
            return (resultatStatut = {
              statAtt,
              countBru,
              count,
              stat0,
              statut: "Gel",
              countPara,
              statVit,
            });
          }
        }
      } else if (statut === "Paralysie") {
        let aleatoire = Math.floor(Math.random() * 4);
        if (countPara === 0) {
          statVit = statVit / 2;
          countPara = 1;
        }
        if (aleatoire === 0) {
          stat0 = 0;
        }
        return (resultatStatut = {
          statAtt,
          countBru,
          count,
          stat0,
          statut: "Paralysie",
          countPara,
          statVit,
        });
      } else if (statut === "Sommeil") {
        let aleatoire = Math.floor(Math.random() * 3);
        if (aleatoire === 0 || count === 3) {
          return (resultatStatut = {
            statAtt,
            countBru,
            count,
            stat0,
            statut: "Vide",
            countPara,
            statVit,
          });
        } else {
          count = count + 1;
          return (resultatStatut = {
            statAtt,
            countBru,
            count,
            stat0,
            statut: "Sommeil",
            countPara,
            statVit,
          });
        }
      } else {
        return (resultatStatut = {
          statAtt,
          countBru,
          count,
          stat0,
          statut: "Vide",
          countPara,
          statVit,
        });
      }
    }

    function statutFinPermaPoke(statut, statPV, statPVMax, count) {
      let resultatStatut = {};
      if (statut === "Br√ªlure") {
        statPV = statPV - (statPVMax * 6) / 100;
        return (resultatStatut = { statPV, count });
      } else if (statut === "Empoisonnement normal") {
        statPV = statPV - (statPVMax * 12) / 100;
        return (resultatStatut = { statPV, count });
      } else if (statut === "Empoisonnement grave") {
        count = count + 1;
        statPV = statPV - (statPVMax * (6 * count)) / 100;
        return (resultatStatut = { statPV, count });
      } else {
        return (resultatStatut = { statPV, count });
      }
    }

    function badgeStatutPermaPoke(statut, badge) {
      if (statut === "Br√ªlure") {
        return (badge.textContent = "BRU");
      } else if (statut === "Gel") {
        return (badge.textContent = "GEL");
      } else if (statut === "Paralysie") {
        return (badge.textContent = "PAR");
      } else if (
        statut === "Empoisonnement normal" ||
        statut === "Empoisonnement grave"
      ) {
        return (badge.textContent = "PSN");
      } else if (statut === "Sommeil") {
        return (badge.textContent = "SOM");
      } else if (statut === "Vide") {
        return (badge.textContent = "");
      }
    }

    function colorStatutPermaPoke(statut, badge) {
      if (statut === "Br√ªlure") {
        return (badge.style.backgroundColor = "rgba(247,82,49,255)");
      } else if (statut === "Gel") {
        return (badge.style.backgroundColor = "rgba(90,206,231,255)");
      } else if (statut === "Paralysie") {
        return (badge.style.backgroundColor = "rgba(255,198,49,255)");
      } else if (
        statut === "Empoisonnement normal" ||
        statut === "Empoisonnement grave"
      ) {
        return (badge.style.backgroundColor = "rgba(181,90,165,255)");
      } else if (statut === "Sommeil") {
        return (badge.style.backgroundColor = "rgba(173,165,148,255)");
      } else {
        return (badge.style.backgroundColor = "");
      }
    }

    function statutPoke(statut, stat) {
      if (statut === "Obsession") {
      } else if (statut === "Attraction") {
      } else if (statut === "Confusion") {
      } else if (statut === "Mal√©diction") {
      } else if (statut === "Peur") {
      } else if (statut === "Flair" || "Clairvoyance") {
      } else if (statut === "≈íil Miracle") {
      } else if (statut === "Vampigraine") {
      } else if (statut === "Pi√®ge") {
      } else if (statut === "B√¢illement") {
      } else if (statut === "Cauchemar") {
      } else if (statut === "P√©trification") {
      }
    }

    //Action de calcul des PV
    function calculPV(num) {
      const modifPVVS = document.getElementById("pvMaxPokeVS");
      const modifPV = document.getElementById("pvMaxPoke");
      const barreVie = document.getElementById("barrePoke");
      const barreVieVS = document.getElementById("barrePokeVS");

      let test1 = type1VS;
      let test2 = type2VS;
      let test3 = type1;
      let test4 = type2;
      let test5 = attaque1Type;
      let test6 = "<%- pokemonsVS[0].attaque1.type %>";
      let nomAttaque = attaque1Nom;
      let nomAttaqueVS = attaque1NomVS;
      let test8 = "<%- pokemonsVS[0].attaque1.nom %>";
      let test15 = "<%- pokemons[0].nature %>";

      let efficace1 = 1;
      let efficace2 = 1;
      let efficace1VS = 1;
      let efficace2VS = 1;

      let typeAttaque = "";
      let typeAttaqueClass = "";
      const typeAttaqueVS = attaque1TypeVS;
      const typeAttaqueClassVS = attaque1ClasseVS;

      let degatAtt = 0;

      if (num === 1) {
        typeAttaque = attaque1Type;
        nomAttaque = attaque1Nom;
        degatAtt = attaque_dmg1;
        typeAttaqueClass = attaque1Classe;
        derniereAttaque = nomAttaque;
      } else if (num === 2) {
        typeAttaque = attaque2Type;
        nomAttaque = attaque2Nom;
        degatAtt = attaque_dmg2;
        typeAttaqueClass = attaque2Classe;
        derniereAttaque = nomAttaque;
      } else if (num === 3) {
        typeAttaque = attaque3Type;
        nomAttaque = attaque3Nom;
        degatAtt = attaque_dmg3;
        typeAttaqueClass = attaque3Classe;
        derniereAttaque = nomAttaque;
      } else if (num === 4) {
        typeAttaque = attaque4Type;
        nomAttaque = attaque4Nom;
        degatAtt = attaque_dmg4;
        typeAttaqueClass = attaque4Classe;
        derniereAttaque = nomAttaque;
      } else if (num === "switch") {
        typeAttaque = "neutre";
        nomAttaque = "switch";
        degatAtt = 0;
        typeAttaqueClass = "physical";
      }

      derniereAttaqueVS = nomAttaqueVS;

      function efficace(typeAtt, type, efficace) {
        if (typeAtt === "normal") {
          if (type === "rock" || type === "steel") {
            return (efficace = 0.5);
          } else if (type === "ghost") {
            return (efficace = 0);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "fire") {
          if (
            type === "fire" ||
            type === "water" ||
            type === "rock" ||
            type === "dragon"
          ) {
            return (efficace = 0.5);
          } else if (
            type === "grass" ||
            type === "ice" ||
            type === "bug" ||
            type === "steel"
          ) {
            return (efficace = 2);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "water") {
          if (type === "water" || type === "grass" || type === "dragon") {
            return (efficace = 0.5);
          } else if (type === "fire" || type === "ground" || type === "rock") {
            return (efficace = 2);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "grass") {
          if (
            type === "grass" ||
            type === "fire" ||
            type === "poison" ||
            type === "flying" ||
            type === "bug" ||
            type === "dragon" ||
            type === "steel"
          ) {
            return (efficace = 0.5);
          } else if (type === "water" || type === "ground" || type === "rock") {
            return (efficace = 2);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "electric") {
          if (type === "grass" || type === "electric" || type === "dragon") {
            return (efficace = 0.5);
          } else if (type === "water" || type === "flying") {
            return (efficace = 2);
          } else if (type === "ground") {
            return (efficace = 0);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "ice") {
          if (
            type === "fire" ||
            type === "water" ||
            type === "ice" ||
            type === "steel"
          ) {
            return (efficace = 0.5);
          } else if (
            type === "grass" ||
            type === "flying" ||
            type === "ground" ||
            type === "dragon"
          ) {
            return (efficace = 2);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "fighting") {
          if (
            type === "poison" ||
            type === "flying" ||
            type === "psychic" ||
            type === "bug" ||
            type === "fairy"
          ) {
            return (efficace = 0.5);
          } else if (
            type === "normal" ||
            type === "ice" ||
            type === "rock" ||
            type === "dark" ||
            type === "steel"
          ) {
            return (efficace = 2);
          } else if (type === "ghost") {
            return (efficace = 0);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "poison") {
          if (
            type === "poison" ||
            type === "ground" ||
            type === "rock" ||
            type === "ghost"
          ) {
            return (efficace = 0.5);
          } else if (type === "grass" || type === "fairy") {
            return (efficace = 2);
          } else if (type === "steel") {
            return (efficace = 0);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "ground") {
          if (type === "grass" || type === "bug") {
            return (efficace = 0.5);
          } else if (
            type === "fire" ||
            type === "electric" ||
            type === "poison" ||
            type === "rock" ||
            type === "steel"
          ) {
            return (efficace = 2);
          } else if (type === "flying") {
            return (efficace = 0);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "flying") {
          if (type === "electric" || type === "rock" || type === "steel") {
            return (efficace = 0.5);
          } else if (
            type === "grass" ||
            type === "fighting" ||
            type === "bug"
          ) {
            return (efficace = 2);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "psychic") {
          if (type === "psychic" || type === "steel") {
            return (efficace = 0.5);
          } else if (type === "fighting" || type === "poison") {
            return (efficace = 2);
          } else if (type === "dark") {
            return (efficace = 0);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "bug") {
          if (
            type === "fire" ||
            type === "fighting" ||
            type === "poison" ||
            type === "flying" ||
            type === "ghost" ||
            type === "steel" ||
            type === "fairy"
          ) {
            return (efficace = 0.5);
          } else if (
            type === "grass" ||
            type === "psychic" ||
            type === "dark"
          ) {
            return (efficace = 2);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "rock") {
          if (type === "fighting" || type === "ground" || type === "steel") {
            return (efficace = 0.5);
          } else if (
            type === "flying" ||
            type === "fire" ||
            type === "ice" ||
            type === "bug"
          ) {
            return (efficace = 2);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "ghost") {
          if (type === "dark") {
            return (efficace = 0.5);
          } else if (type === "ghost" || type === "psychic") {
            return (efficace = 2);
          } else if (type === "normal") {
            return (efficace = 0);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "dragon") {
          if (type === "steel") {
            return (efficace = 0.5);
          } else if (type === "dragon") {
            return (efficace = 2);
          } else if (type === "fairy") {
            return (efficace = 0);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "dark") {
          if (type === "fighting" || type === "dark" || type === "fairy") {
            return (efficace = 0.5);
          } else if (type === "psychic" || type === "ghost") {
            return (efficace = 2);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "steel") {
          if (
            type === "fire" ||
            type === "water" ||
            type === "electric" ||
            type === "steel"
          ) {
            return (efficace = 0.5);
          } else if (type === "ice" || type === "rock" || type === "fairy") {
            return (efficace = 2);
          } else {
            return (efficace = 1);
          }
        } else if (typeAtt === "fairy") {
          if (type === "fire" || type === "poison" || type === "steel") {
            return (efficace = 0.5);
          } else if (
            type === "fighting" ||
            type === "dragon" ||
            type === "dark"
          ) {
            return (efficace = 2);
          } else {
            return (efficace = 1);
          }
        } else {
          return (efficace = 1);
        }
      }

      efficace1 = efficace(typeAttaque, type1VS, efficace1);
      efficace2 = efficace(typeAttaque, type2VS, efficace2);
      efficace1VS = efficace(typeAttaqueVS, type1, efficace1VS);
      efficace2VS = efficace(typeAttaqueVS, type2, efficace2VS);

      let attaque = 0;
      let defense = 0;
      let attaqueVS = 0;
      let defenseVS = 0;

      if (typeAttaqueClass === "physical") {
        attaque = attPoke;
        defenseVS = defPokeVS;
      } else if (typeAttaqueClass === "special") {
        attaque = attSPoke;
        defenseVS = defSPokeVS;
      } else if (typeAttaqueClass === "status") {
        attaque = attPoke;
        degatAtt = 0;
        defenseVS = defSPokeVS;
        efficace1 = 0;
      }

      if (typeAttaqueClassVS === "physical") {
        attaqueVS = attPokeVS;
        defense = defPoke;
      } else if (typeAttaqueClassVS === "special") {
        attaqueVS = attSPokeVS;
        defense = defSPoke;
      } else if (typeAttaqueClassVS === "status") {
        attaqueVS = 0;
        defense = defSPoke;
        efficace1VS = 0;
      }

      let bonusType = 1;
      if (typeAttaque === type1 || typeAttaque === type2) {
        bonusType = 1.5;
      }

      let bonusTypeVS = 1;
      if (typeAttaqueVS === type1VS || typeAttaqueVS === type2VS) {
        bonusTypeVS = 1.5;
      }

      console.log("attPokeVS", attPokeVS);
      console.log("vitesse", vitPoke);

      if (num === "switch") {
        if (pvActuVS > 0) {
          joueur = false;
          let objetD√©butStatut = statutD√©butPermaPoke(
            tabStatutPermaVS[numPokeVS - 1],
            attPokeVS,
            vitPokeVS,
            efficace1VS,
            tabCountStatutPermaVS[numPokeVS - 1],
            bruVS,
            paraVS,
            nomAttaque,
            attaque1NomVS,
            typeAttaqueVS
          );

          attPokeVS = objetD√©butStatut.statAtt;
          bruVS = objetD√©butStatut.countBru;
          tabCountStatutPermaVS[numPokeVS - 1] = objetD√©butStatut.count;
          efficace1VS = objetD√©butStatut.stat0;
          paraVS = objetD√©butStatut.countPara;
          vitPokeVS = objetD√©butStatut.statVit;
          tabStatutPermaVS[numPokeVS - 1] = objetD√©butStatut.statut;
          if (tabStatutPermaVS[numPokeVS - 1] === "Vide") {
            badgeStatutPermaPoke(
              tabStatutPermaVS[numPokeVS - 1],
              badgeStatutVS
            );
            colorStatutPermaPoke(
              tabStatutPermaVS[numPokeVS - 1],
              badgeStatutVS
            );
            tabCountStatutPermaVS[numPokeVS - 1] = 0;
          }

          pvActu = Math.round(
            pvActu -
              ((42 * attaqueVS * attaque_dmg1VS) / (defense * 50) + 2) *
                bonusTypeVS *
                (efficace1VS * efficace2VS)
          );
        } else {
          pvActu = pvActu;
        }
      } else if (vitPoke > vitPokeVS) {
        if (pvActu > 0) {
          joueur = true;
          effetAtt(nomAttaque, numPokeVS, type1, type2, type1VS, type2VS);
          pvActuVS = Math.round(
            pvActuVS -
              ((42 * attaque * degatAtt) / (defenseVS * 50) + 2) *
                bonusType *
                (efficace1 * efficace2)
          );
        } else {
          pvActuVS = pvActuVS;
        }
        if (pvActuVS > 0) {
          joueur = false;
          let objetD√©butStatut = statutD√©butPermaPoke(
            tabStatutPermaVS[numPokeVS - 1],
            attPokeVS,
            vitPokeVS,
            efficace1VS,
            tabCountStatutPermaVS[numPokeVS - 1],
            bruVS,
            paraVS,
            nomAttaque,
            attaque1NomVS,
            typeAttaqueVS
          );

          attPokeVS = objetD√©butStatut.statAtt;
          bruVS = objetD√©butStatut.countBru;
          tabCountStatutPermaVS[numPokeVS - 1] = objetD√©butStatut.count;
          efficace1VS = objetD√©butStatut.stat0;
          paraVS = objetD√©butStatut.countPara;
          vitPokeVS = objetD√©butStatut.statVit;
          tabStatutPermaVS[numPokeVS - 1] = objetD√©butStatut.statut;
          if (tabStatutPermaVS[numPokeVS - 1] === "Vide") {
            badgeStatutPermaPoke(
              tabStatutPermaVS[numPokeVS - 1],
              badgeStatutVS
            );
            colorStatutPermaPoke(
              tabStatutPermaVS[numPokeVS - 1],
              badgeStatutVS
            );
            tabCountStatutPermaVS[numPokeVS - 1] = 0;
          }

          pvActu = Math.round(
            pvActu -
              ((42 * attaqueVS * attaque_dmg1VS) / (defense * 50) + 2) *
                bonusTypeVS *
                (efficace1VS * efficace2VS)
          );
        } else {
          pvActu = pvActu;
        }
      } else if (vitPoke < vitPokeVS) {
        if (pvActuVS > 0) {
          joueur = false;
          let objetD√©butStatut = statutD√©butPermaPoke(
            tabStatutPermaVS[numPokeVS - 1],
            attPokeVS,
            vitPokeVS,
            efficace1VS,
            tabCountStatutPermaVS[numPokeVS - 1],
            bruVS,
            paraVS,
            nomAttaque,
            attaque1NomVS,
            typeAttaqueVS
          );

          attPokeVS = objetD√©butStatut.statAtt;
          bruVS = objetD√©butStatut.countBru;
          tabCountStatutPermaVS[numPokeVS - 1] = objetD√©butStatut.count;
          efficace1VS = objetD√©butStatut.stat0;
          paraVS = objetD√©butStatut.countPara;
          vitPokeVS = objetD√©butStatut.statVit;
          tabStatutPermaVS[numPokeVS - 1] = objetD√©butStatut.statut;
          if (tabStatutPermaVS[numPokeVS - 1] === "Vide") {
            badgeStatutPermaPoke(
              tabStatutPermaVS[numPokeVS - 1],
              badgeStatutVS
            );
            colorStatutPermaPoke(
              tabStatutPermaVS[numPokeVS - 1],
              badgeStatutVS
            );
            tabCountStatutPermaVS[numPokeVS - 1] = 0;
          }

          pvActu = Math.round(
            pvActu -
              ((42 * attaqueVS * attaque_dmg1VS) / (defense * 50) + 2) *
                bonusTypeVS *
                (efficace1VS * efficace2VS)
          );
        } else {
          pvActu = pvActu;
        }
        if (pvActu > 0) {
          joueur = true;
          effetAtt(nomAttaque, numPokeVS, type1, type2, type1VS, type2VS);
          pvActuVS = Math.round(
            pvActuVS -
              ((42 * attaque * degatAtt) / (defenseVS * 50) + 2) *
                bonusType *
                (efficace1 * efficace2)
          );
        } else {
          pvActuVS = pvActuVS;
        }
      } else if (vitPoke === vitPokeVS) {
        let random = Math.round(Math.random() * 1 + 1);
        if (random === 0) {
          if (pvActuVS > 0) {
            joueur = false;
            let objetD√©butStatut = statutD√©butPermaPoke(
              tabStatutPermaVS[numPokeVS - 1],
              attPokeVS,
              vitPokeVS,
              efficace1VS,
              tabCountStatutPermaVS[numPokeVS - 1],
              bruVS,
              paraVS,
              nomAttaque,
              attaque1NomVS,
              typeAttaqueVS
            );

            attPokeVS = objetD√©butStatut.statAtt;
            bruVS = objetD√©butStatut.countBru;
            tabCountStatutPermaVS[numPokeVS - 1] = objetD√©butStatut.count;
            efficace1VS = objetD√©butStatut.stat0;
            paraVS = objetD√©butStatut.countPara;
            vitPokeVS = objetD√©butStatut.statVit;
            tabStatutPermaVS[numPokeVS - 1] = objetD√©butStatut.statut;
            if (tabStatutPermaVS[numPokeVS - 1] === "Vide") {
              badgeStatutPermaPoke(
                tabStatutPermaVS[numPokeVS - 1],
                badgeStatutVS
              );
              colorStatutPermaPoke(
                tabStatutPermaVS[numPokeVS - 1],
                badgeStatutVS
              );
              tabCountStatutPermaVS[numPokeVS - 1] = 0;
            }

            pvActu = Math.round(
              pvActu -
                ((42 * attaqueVS * attaque_dmg1VS) / (defense * 50) + 2) *
                  bonusTypeVS *
                  (efficace1VS * efficace2VS)
            );
          } else {
            pvActu = pvActu;
          }
          if (pvActu > 0) {
            joueur = true;
            effetAtt(nomAttaque, numPokeVS, type1, type2, type1VS, type2VS);
            pvActuVS = Math.round(
              pvActuVS -
                ((42 * attaque * degatAtt) / (defenseVS * 50) + 2) *
                  bonusType *
                  (efficace1 * efficace2)
            );
          } else {
            pvActuVS = pvActuVS;
          }
        } else {
          if (pvActu > 0) {
            joueur = true;
            effetAtt(nomAttaque, numPokeVS, type1, type2, type1VS, type2VS);
            pvActuVS = Math.round(
              pvActuVS -
                ((42 * attaque * degatAtt) / (defenseVS * 50) + 2) *
                  bonusType *
                  (efficace1 * efficace2)
            );
          } else {
            pvActuVS = pvActuVS;
          }
          if (pvActuVS > 0) {
            joueur = false;
            let objetD√©butStatut = statutD√©butPermaPoke(
              tabStatutPermaVS[numPokeVS - 1],
              attPokeVS,
              vitPokeVS,
              efficace1VS,
              tabCountStatutPermaVS[numPokeVS - 1],
              bruVS,
              paraVS,
              nomAttaque,
              attaque1NomVS,
              typeAttaqueVS
            );

            attPokeVS = objetD√©butStatut.statAtt;
            bruVS = objetD√©butStatut.countBru;
            tabCountStatutPermaVS[numPokeVS - 1] = objetD√©butStatut.count;
            efficace1VS = objetD√©butStatut.stat0;
            paraVS = objetD√©butStatut.countPara;
            vitPokeVS = objetD√©butStatut.statVit;
            tabStatutPermaVS[numPokeVS - 1] = objetD√©butStatut.statut;
            if (tabStatutPermaVS[numPokeVS - 1] === "Vide") {
              badgeStatutPermaPoke(
                tabStatutPermaVS[numPokeVS - 1],
                badgeStatutVS
              );
              colorStatutPermaPoke(
                tabStatutPermaVS[numPokeVS - 1],
                badgeStatutVS
              );
              tabCountStatutPermaVS[numPokeVS - 1] = 0;
            }

            pvActu = Math.round(
              pvActu -
                ((42 * attaqueVS * attaque_dmg1VS) / (defense * 50) + 2) *
                  bonusTypeVS *
                  (efficace1VS * efficace2VS)
            );
          } else {
            pvActu = pvActu;
          }
        }
      }

      let objetStatut = statutFinPermaPoke(
        tabStatutPermaVS[numPokeVS - 1],
        pvActuVS,
        pvVS,
        poisVS
      );

      pvActuVS = Math.round(objetStatut.statPV);
      poisVS = objetStatut.count;

      if (pvActuVS < 0) {
        pvActuVS = 0;
      }
      if (pvActu < 0) {
        pvActu = 0;
      }

      // console.log("type1VS", test1);
      // console.log("type2VS", test2);
      // console.log("attaque1.name", nomAttaque);
      // console.log("typeAttaque", typeAttaque);
      // console.log("attaque1VS.name", test8);
      // console.log("attaque1VS.type.name", test6);
      // console.log("efficace1", efficace1);
      // console.log("efficace2", efficace2);
      // console.log("attaque", attaque);
      // console.log("defenseVS", defenseVS);
      // console.log("typeAttaqueClass", typeAttaqueClass);
      // console.log("vitPoke", vitPoke);
      // console.log("vitPokeVS", vitPokeVS);
      // console.log("bonusType", bonusType);
      // console.log("nature", test15);

      console.log("efficace1VS", efficace1VS);
      console.log("attPokeVS", attPokeVS);
      console.log("vitPokeVS", vitPokeVS);
      console.log(
        "tabCountStatutPermaVS[numPokeVS - 1]",
        tabCountStatutPermaVS[numPokeVS - 1]
      );
      console.log("defS", defSPoke);

      tabPVActu.splice(nombre, 1, pvActu);

      // console.log("tab1", tabPVActu[0]);
      // console.log("tab2", tabPVActu[1]);
      // console.log("tab3", tabPVActu[2]);
      // console.log("tab4", tabPVActu[3]);
      // console.log("tab5", tabPVActu[4]);
      // console.log("tab6", tabPVActu[5]);
      // console.log("nombre", nombre);
      // console.log("cranStat[0]", cranStat[0]);
      // console.log("cranStatVS[0]", cranStatVS[0]);

      console.log(
        "tabStatutPermaVS[numPokeVS]",
        tabStatutPermaVS[numPokeVS - 1]
      );
      console.log("poisVS", poisVS);
      console.log("objetStatut.statPV", objetStatut.statPV);

      modifPV.textContent = `${pvActu}/${pv}`;
      barreVie.value = pvActu;
      modifPVVS.textContent = `${pvActuVS}/${pvVS}`;
      barreVieVS.value = pvActuVS;

      const modifPokeballVS1 = document.getElementById("pokeballVS1");
      const modifPokeballVS2 = document.getElementById("pokeballVS2");
      const modifPokeballVS3 = document.getElementById("pokeballVS3");
      const modifPokeballVS4 = document.getElementById("pokeballVS4");
      const modifPokeballVS5 = document.getElementById("pokeballVS5");
      const modifPokeballVS6 = document.getElementById("pokeballVS6");

      if (pvActuVS === 0) {
        if (numPokeVS === 1) {
          changementPokeVS(2);
          numPokeVS = 2;
          modifPokeballVS1.src = "../images/PokeballGris.jpg";
        } else if (numPokeVS === 2) {
          changementPokeVS(3);
          numPokeVS = 3;
          modifPokeballVS2.src = "../images/PokeballGris.jpg";
        } else if (numPokeVS === 3) {
          changementPokeVS(4);
          numPokeVS = 4;
          modifPokeballVS3.src = "../images/PokeballGris.jpg";
        } else if (numPokeVS === 4) {
          changementPokeVS(5);
          numPokeVS = 5;
          modifPokeballVS4.src = "../images/PokeballGris.jpg";
        } else if (numPokeVS === 5) {
          changementPokeVS(6);
          numPokeVS = 6;
          modifPokeballVS5.src = "../images/PokeballGris.jpg";
        } else if (numPokeVS === 6) {
          modifPokeballVS6.src = "../images/PokeballGris.jpg";
          console.log("Victoire!!!");
        }
      }

      const modifPokeball1 = document.getElementById("pokeball1");
      const modifPokeball2 = document.getElementById("pokeball2");
      const modifPokeball3 = document.getElementById("pokeball3");
      const modifPokeball4 = document.getElementById("pokeball4");
      const modifPokeball5 = document.getElementById("pokeball5");
      const modifPokeball6 = document.getElementById("pokeball6");

      if (pvActu === 0) {
        if (numPoke === 1) {
          modifPokeball1.src = "../images/PokeballGris.jpg";
        } else if (numPoke === 2) {
          modifPokeball2.src = "../images/PokeballGris.jpg";
        } else if (numPoke === 3) {
          modifPokeball3.src = "../images/PokeballGris.jpg";
        } else if (numPoke === 4) {
          modifPokeball4.src = "../images/PokeballGris.jpg";
        } else if (numPoke === 5) {
          modifPokeball5.src = "../images/PokeballGris.jpg";
        } else if (numPoke === 6) {
          modifPokeball6.src = "../images/PokeballGris.jpg";
        }
      }
    }

    //Action de changement de pokemon
    function changementPoke(num) {
      const modifSprite = document.getElementById("pokemon");
      const modifNom = document.getElementById("nomPokeMAJ");
      const modifBarre = document.getElementById("barrePoke");
      const modifPVMax = document.getElementById("pvMaxPoke");
      const modifBadge1 = document.getElementById("badgeAtt1");
      const modifNomAtt1 = document.getElementById("nomAtt1");
      const modifBadge2 = document.getElementById("badgeAtt2");
      const modifNomAtt2 = document.getElementById("nomAtt2");
      const modifBadge3 = document.getElementById("badgeAtt3");
      const modifNomAtt3 = document.getElementById("nomAtt3");
      const modifBadge4 = document.getElementById("badgeAtt4");
      const modifNomAtt4 = document.getElementById("nomAtt4");

      cranStat = [0, 0, 0, 0, 0];
      bru = 0;
      para = 0;
      pois = 0;
      badgeAtt.textContent = "";
      badgeAtt.style.backgroundColor = "";
      badgeDef.textContent = "";
      badgeDef.style.backgroundColor = "";
      badgeAttS.textContent = "";
      badgeAttS.style.backgroundColor = "";
      badgeDefS.textContent = "";
      badgeDefS.style.backgroundColor = "";
      badgeVit.textContent = "";
      badgeVit.style.backgroundColor = "";

      let pvAvant = pvActu;

      const badgeStatut = document.getElementById("statut");
      let texte = "";
      let color = "";

      if (num === 1) {
        numPoke = 1;
        nombre = 0;

        pv = Number("<%- pokemons[0].stats.pv %>");
        if (Number.isInteger(tabPVActu[0])) {
          pvActu = tabPVActu[0];
        } else {
          pvActu = pv;
        }
        attMaxPoke = Number("<%- pokemons[0].stats.att %>");
        defMaxPoke = Number("<%- pokemons[0].stats.def %>");
        attSMaxPoke = Number("<%- pokemons[0].stats.attS %>");
        defSMaxPoke = Number("<%- pokemons[0].stats.defS %>");
        vitMaxPoke = Number("<%- pokemons[0].stats.vit %>");
        attPoke = attMaxPoke;
        defPoke = defMaxPoke;
        attSPoke = attSMaxPoke;
        defSPoke = defSMaxPoke;
        vitPoke = vitMaxPoke;
        attaque_dmg1 = Number("<%- pokemons[0].attaque1.puissance %>");
        attaque_dmg2 = Number("<%- pokemons[0].attaque2.puissance %>");
        attaque_dmg3 = Number("<%- pokemons[0].attaque3.puissance %>");
        attaque_dmg4 = Number("<%- pokemons[0].attaque4.puissance %>");
        attaque1Type = "<%- pokemons[0].attaque1.type %>";
        attaque2Type = "<%- pokemons[0].attaque2.type %>";
        attaque3Type = "<%- pokemons[0].attaque3.type %>";
        attaque4Type = "<%- pokemons[0].attaque4.type %>";
        attaque1Nom = "<%- pokemons[0].attaque1.nom %>";
        attaque2Nom = "<%- pokemons[0].attaque2.nom %>";
        attaque3Nom = "<%- pokemons[0].attaque3.nom %>";
        attaque4Nom = "<%- pokemons[0].attaque4.nom %>";
        attaque1Classe = "<%- pokemons[0].attaque1.classe %>";
        attaque2Classe = "<%- pokemons[0].attaque2.classe %>";
        attaque3Classe = "<%- pokemons[0].attaque3.classe %>";
        attaque4Classe = "<%- pokemons[0].attaque4.classe %>";
        type1 = "<%- pokemons[0].type1 %>";
        type2 = "<%- pokemons[0].type2 %>";

        badgeStatutPermaPoke(tabStatutPerma[0], badgeStatut);
        colorStatutPermaPoke(tabStatutPerma[0], badgeStatut);

        colorAttaque1 = couleur(attaque1Type, colorAttaque1);
        colorAttaque2 = couleur(attaque2Type, colorAttaque2);
        colorAttaque3 = couleur(attaque3Type, colorAttaque3);
        colorAttaque4 = couleur(attaque4Type, colorAttaque4);

        document.getElementById("badgeAtt1").style.backgroundColor =
          colorAttaque1;
        document.getElementById("badgeAtt2").style.backgroundColor =
          colorAttaque2;
        document.getElementById("badgeAtt3").style.backgroundColor =
          colorAttaque3;
        document.getElementById("badgeAtt4").style.backgroundColor =
          colorAttaque4;

        modifSprite.src = "<%- pokemons[0].sprite %>";
        modifNom.textContent = "<%= pokemons[0].nom.toUpperCase() %>";
        modifBarre.value = `${pvActu}`;
        modifBarre.max = "<%= pokemons[0].stats.pv %>";
        modifPVMax.textContent = `${pvActu}/<%= pokemons[0].stats.pv %>`;
        modifBadge1.textContent = "<%= pokemons[0].attaque1.type %>";
        modifNomAtt1.textContent = "<%= pokemons[0].attaque1.nom %>";
        modifBadge2.textContent = "<%= pokemons[0].attaque2.type %>";
        modifNomAtt2.textContent = "<%= pokemons[0].attaque2.nom %>";
        modifBadge3.textContent = "<%= pokemons[0].attaque3.type %>";
        modifNomAtt3.textContent = "<%= pokemons[0].attaque3.nom %>";
        modifBadge4.textContent = "<%= pokemons[0].attaque4.type %>";
        modifNomAtt4.textContent = "<%= pokemons[0].attaque4.nom %>";

        if (pvAvant !== 0) {
          calculPV("switch");
        }
      } else if (num === 2) {
        numPoke = 2;
        nombre = 1;

        pv = Number("<%- pokemons[1].stats.pv %>");
        if (Number.isInteger(tabPVActu[1])) {
          pvActu = tabPVActu[1];
        } else {
          pvActu = pv;
        }
        attMaxPoke = Number("<%- pokemons[1].stats.att %>");
        defMaxPoke = Number("<%- pokemons[1].stats.def %>");
        attSMaxPoke = Number("<%- pokemons[1].stats.attS %>");
        defSMaxPoke = Number("<%- pokemons[1].stats.defS %>");
        vitMaxPoke = Number("<%- pokemons[1].stats.vit %>");
        attPoke = attMaxPoke;
        defPoke = defMaxPoke;
        attSPoke = attSMaxPoke;
        defSPoke = defSMaxPoke;
        vitPoke = vitMaxPoke;
        attaque_dmg1 = Number("<%- pokemons[1].attaque1.puissance %>");
        attaque_dmg2 = Number("<%- pokemons[1].attaque2.puissance %>");
        attaque_dmg3 = Number("<%- pokemons[1].attaque3.puissance %>");
        attaque_dmg4 = Number("<%- pokemons[1].attaque4.puissance %>");
        attaque1Type = "<%- pokemons[1].attaque1.type %>";
        attaque2Type = "<%- pokemons[1].attaque2.type %>";
        attaque3Type = "<%- pokemons[1].attaque3.type %>";
        attaque4Type = "<%- pokemons[1].attaque4.type %>";
        attaque1Nom = "<%- pokemons[1].attaque1.nom %>";
        attaque2Nom = "<%- pokemons[1].attaque2.nom %>";
        attaque3Nom = "<%- pokemons[1].attaque3.nom %>";
        attaque4Nom = "<%- pokemons[1].attaque4.nom %>";
        attaque1Classe = "<%- pokemons[1].attaque1.classe %>";
        attaque2Classe = "<%- pokemons[1].attaque2.classe %>";
        attaque3Classe = "<%- pokemons[1].attaque3.classe %>";
        attaque4Classe = "<%- pokemons[1].attaque4.classe %>";
        type1 = "<%- pokemons[1].type1 %>";
        type2 = "<%- pokemons[1].type2 %>";

        badgeStatutPermaPoke(tabStatutPerma[1], badgeStatut);
        colorStatutPermaPoke(tabStatutPerma[1], badgeStatut);

        colorAttaque1 = couleur(attaque1Type, colorAttaque1);
        colorAttaque2 = couleur(attaque2Type, colorAttaque2);
        colorAttaque3 = couleur(attaque3Type, colorAttaque3);
        colorAttaque4 = couleur(attaque4Type, colorAttaque4);

        document.getElementById("badgeAtt1").style.backgroundColor =
          colorAttaque1;
        document.getElementById("badgeAtt2").style.backgroundColor =
          colorAttaque2;
        document.getElementById("badgeAtt3").style.backgroundColor =
          colorAttaque3;
        document.getElementById("badgeAtt4").style.backgroundColor =
          colorAttaque4;

        modifSprite.src = "<%- pokemons[1].sprite %>";
        modifNom.textContent = "<%= pokemons[1].nom.toUpperCase() %>";
        modifBarre.value = `${pvActu}`;
        modifBarre.max = "<%= pokemons[1].stats.pv %>";
        modifPVMax.textContent = `${pvActu}/<%= pokemons[1].stats.pv %>`;
        modifBadge1.textContent = "<%= pokemons[1].attaque1.type %>";
        modifNomAtt1.textContent = "<%= pokemons[1].attaque1.nom %>";
        modifBadge2.textContent = "<%= pokemons[1].attaque2.type %>";
        modifNomAtt2.textContent = "<%= pokemons[1].attaque2.nom %>";
        modifBadge3.textContent = "<%= pokemons[1].attaque3.type %>";
        modifNomAtt3.textContent = "<%= pokemons[1].attaque3.nom %>";
        modifBadge4.textContent = "<%= pokemons[1].attaque4.type %>";
        modifNomAtt4.textContent = "<%= pokemons[1].attaque4.nom %>";

        if (pvAvant !== 0) {
          calculPV("switch");
        }
      } else if (num === 3) {
        numPoke = 3;
        nombre = 2;

        pv = Number("<%- pokemons[2].stats.pv %>");
        if (Number.isInteger(tabPVActu[2])) {
          pvActu = tabPVActu[2];
        } else {
          pvActu = pv;
        }
        attMaxPoke = Number("<%- pokemons[2].stats.att %>");
        defMaxPoke = Number("<%- pokemons[2].stats.def %>");
        attSMaxPoke = Number("<%- pokemons[2].stats.attS %>");
        defSMaxPoke = Number("<%- pokemons[2].stats.defS %>");
        vitMaxPoke = Number("<%- pokemons[2].stats.vit %>");
        attPoke = attMaxPoke;
        defPoke = defMaxPoke;
        attSPoke = attSMaxPoke;
        defSPoke = defSMaxPoke;
        vitPoke = vitMaxPoke;
        attaque_dmg1 = Number("<%- pokemons[2].attaque1.puissance %>");
        attaque_dmg2 = Number("<%- pokemons[2].attaque2.puissance %>");
        attaque_dmg3 = Number("<%- pokemons[2].attaque3.puissance %>");
        attaque_dmg4 = Number("<%- pokemons[2].attaque4.puissance %>");
        attaque1Type = "<%- pokemons[2].attaque1.type %>";
        attaque2Type = "<%- pokemons[2].attaque2.type %>";
        attaque3Type = "<%- pokemons[2].attaque3.type %>";
        attaque4Type = "<%- pokemons[2].attaque4.type %>";
        attaque1Nom = "<%- pokemons[2].attaque1.nom %>";
        attaque2Nom = "<%- pokemons[2].attaque2.nom %>";
        attaque3Nom = "<%- pokemons[2].attaque3.nom %>";
        attaque4Nom = "<%- pokemons[2].attaque4.nom %>";
        attaque1Classe = "<%- pokemons[2].attaque1.classe %>";
        attaque2Classe = "<%- pokemons[2].attaque2.classe %>";
        attaque3Classe = "<%- pokemons[2].attaque3.classe %>";
        attaque4Classe = "<%- pokemons[2].attaque4.classe %>";
        type1 = "<%- pokemons[2].type1 %>";
        type2 = "<%- pokemons[2].type2 %>";

        badgeStatutPermaPoke(tabStatutPerma[2], badgeStatut);
        colorStatutPermaPoke(tabStatutPerma[2], badgeStatut);

        colorAttaque1 = couleur(attaque1Type, colorAttaque1);
        colorAttaque2 = couleur(attaque2Type, colorAttaque2);
        colorAttaque3 = couleur(attaque3Type, colorAttaque3);
        colorAttaque4 = couleur(attaque4Type, colorAttaque4);

        document.getElementById("badgeAtt1").style.backgroundColor =
          colorAttaque1;
        document.getElementById("badgeAtt2").style.backgroundColor =
          colorAttaque2;
        document.getElementById("badgeAtt3").style.backgroundColor =
          colorAttaque3;
        document.getElementById("badgeAtt4").style.backgroundColor =
          colorAttaque4;

        modifSprite.src = "<%- pokemons[2].sprite %>";
        modifNom.textContent = "<%= pokemons[2].nom.toUpperCase() %>";
        modifBarre.value = `${pvActu}`;
        modifBarre.max = "<%= pokemons[2].stats.pv %>";
        modifPVMax.textContent = `${pvActu}/<%= pokemons[2].stats.pv %>`;
        modifBadge1.textContent = "<%= pokemons[2].attaque1.type %>";
        modifNomAtt1.textContent = "<%= pokemons[2].attaque1.nom %>";
        modifBadge2.textContent = "<%= pokemons[2].attaque2.type %>";
        modifNomAtt2.textContent = "<%= pokemons[2].attaque2.nom %>";
        modifBadge3.textContent = "<%= pokemons[2].attaque3.type %>";
        modifNomAtt3.textContent = "<%= pokemons[2].attaque3.nom %>";
        modifBadge4.textContent = "<%= pokemons[2].attaque4.type %>";
        modifNomAtt4.textContent = "<%= pokemons[2].attaque4.nom %>";

        if (pvAvant !== 0) {
          calculPV("switch");
        }
      } else if (num === 4) {
        numPoke = 4;
        nombre = 3;

        pv = Number("<%- pokemons[3].stats.pv %>");
        if (Number.isInteger(tabPVActu[3])) {
          pvActu = tabPVActu[3];
        } else {
          pvActu = pv;
        }
        attMaxPoke = Number("<%- pokemons[3].stats.att %>");
        defMaxPoke = Number("<%- pokemons[3].stats.def %>");
        attSMaxPoke = Number("<%- pokemons[3].stats.attS %>");
        defSMaxPoke = Number("<%- pokemons[3].stats.defS %>");
        vitMaxPoke = Number("<%- pokemons[3].stats.vit %>");
        attPoke = attMaxPoke;
        defPoke = defMaxPoke;
        attSPoke = attSMaxPoke;
        defSPoke = defSMaxPoke;
        vitPoke = vitMaxPoke;
        attaque_dmg1 = Number("<%- pokemons[3].attaque1.puissance %>");
        attaque_dmg2 = Number("<%- pokemons[3].attaque2.puissance %>");
        attaque_dmg3 = Number("<%- pokemons[3].attaque3.puissance %>");
        attaque_dmg4 = Number("<%- pokemons[3].attaque4.puissance %>");
        attaque1Type = "<%- pokemons[3].attaque1.type %>";
        attaque2Type = "<%- pokemons[3].attaque2.type %>";
        attaque3Type = "<%- pokemons[3].attaque3.type %>";
        attaque4Type = "<%- pokemons[3].attaque4.type %>";
        attaque1Nom = "<%- pokemons[3].attaque1.nom %>";
        attaque2Nom = "<%- pokemons[3].attaque2.nom %>";
        attaque3Nom = "<%- pokemons[3].attaque3.nom %>";
        attaque4Nom = "<%- pokemons[3].attaque4.nom %>";
        attaque1Classe = "<%- pokemons[3].attaque1.classe %>";
        attaque2Classe = "<%- pokemons[3].attaque2.classe %>";
        attaque3Classe = "<%- pokemons[3].attaque3.classe %>";
        attaque4Classe = "<%- pokemons[3].attaque4.classe %>";
        type1 = "<%- pokemons[3].type1 %>";
        type2 = "<%- pokemons[3].type2 %>";

        badgeStatutPermaPoke(tabStatutPerma[3], badgeStatut);
        colorStatutPermaPoke(tabStatutPerma[3], badgeStatut);

        colorAttaque1 = couleur(attaque1Type, colorAttaque1);
        colorAttaque2 = couleur(attaque2Type, colorAttaque2);
        colorAttaque3 = couleur(attaque3Type, colorAttaque3);
        colorAttaque4 = couleur(attaque4Type, colorAttaque4);

        document.getElementById("badgeAtt1").style.backgroundColor =
          colorAttaque1;
        document.getElementById("badgeAtt2").style.backgroundColor =
          colorAttaque2;
        document.getElementById("badgeAtt3").style.backgroundColor =
          colorAttaque3;
        document.getElementById("badgeAtt4").style.backgroundColor =
          colorAttaque4;

        modifSprite.src = "<%- pokemons[3].sprite %>";
        modifNom.textContent = "<%= pokemons[3].nom.toUpperCase() %>";
        modifBarre.value = `${pvActu}`;
        modifBarre.max = "<%= pokemons[3].stats.pv %>";
        modifPVMax.textContent = `${pvActu}/<%= pokemons[3].stats.pv %>`;
        modifBadge1.textContent = "<%= pokemons[3].attaque1.type %>";
        modifNomAtt1.textContent = "<%= pokemons[3].attaque1.nom %>";
        modifBadge2.textContent = "<%= pokemons[3].attaque2.type %>";
        modifNomAtt2.textContent = "<%= pokemons[3].attaque2.nom %>";
        modifBadge3.textContent = "<%= pokemons[3].attaque3.type %>";
        modifNomAtt3.textContent = "<%= pokemons[3].attaque3.nom %>";
        modifBadge4.textContent = "<%= pokemons[3].attaque4.type %>";
        modifNomAtt4.textContent = "<%= pokemons[3].attaque4.nom %>";

        if (pvAvant !== 0) {
          calculPV("switch");
        }
      } else if (num === 5) {
        numPoke = 5;
        nombre = 4;

        pv = Number("<%- pokemons[4].stats.pv %>");
        if (Number.isInteger(tabPVActu[4])) {
          pvActu = tabPVActu[4];
        } else {
          pvActu = pv;
        }
        attMaxPoke = Number("<%- pokemons[4].stats.att %>");
        defMaxPoke = Number("<%- pokemons[4].stats.def %>");
        attSMaxPoke = Number("<%- pokemons[4].stats.attS %>");
        defSMaxPoke = Number("<%- pokemons[4].stats.defS %>");
        vitMaxPoke = Number("<%- pokemons[4].stats.vit %>");
        attPoke = attMaxPoke;
        defPoke = defMaxPoke;
        attSPoke = attSMaxPoke;
        defSPoke = defSMaxPoke;
        vitPoke = vitMaxPoke;
        attaque_dmg1 = Number("<%- pokemons[4].attaque1.puissance %>");
        attaque_dmg2 = Number("<%- pokemons[4].attaque2.puissance %>");
        attaque_dmg3 = Number("<%- pokemons[4].attaque3.puissance %>");
        attaque_dmg4 = Number("<%- pokemons[4].attaque4.puissance %>");
        attaque1Type = "<%- pokemons[4].attaque1.type %>";
        attaque2Type = "<%- pokemons[4].attaque2.type %>";
        attaque3Type = "<%- pokemons[4].attaque3.type %>";
        attaque4Type = "<%- pokemons[4].attaque4.type %>";
        attaque1Nom = "<%- pokemons[4].attaque1.nom %>";
        attaque2Nom = "<%- pokemons[4].attaque2.nom %>";
        attaque3Nom = "<%- pokemons[4].attaque3.nom %>";
        attaque4Nom = "<%- pokemons[4].attaque4.nom %>";
        attaque1Classe = "<%- pokemons[4].attaque1.classe %>";
        attaque2Classe = "<%- pokemons[4].attaque2.classe %>";
        attaque3Classe = "<%- pokemons[4].attaque3.classe %>";
        attaque4Classe = "<%- pokemons[4].attaque4.classe %>";
        type1 = "<%- pokemons[4].type1 %>";
        type2 = "<%- pokemons[4].type2 %>";

        badgeStatutPermaPoke(tabStatutPerma[4], badgeStatut);
        colorStatutPermaPoke(tabStatutPerma[4], badgeStatut);

        colorAttaque1 = couleur(attaque1Type, colorAttaque1);
        colorAttaque2 = couleur(attaque2Type, colorAttaque2);
        colorAttaque3 = couleur(attaque3Type, colorAttaque3);
        colorAttaque4 = couleur(attaque4Type, colorAttaque4);

        document.getElementById("badgeAtt1").style.backgroundColor =
          colorAttaque1;
        document.getElementById("badgeAtt2").style.backgroundColor =
          colorAttaque2;
        document.getElementById("badgeAtt3").style.backgroundColor =
          colorAttaque3;
        document.getElementById("badgeAtt4").style.backgroundColor =
          colorAttaque4;

        modifSprite.src = "<%- pokemons[4].sprite %>";
        modifNom.textContent = "<%= pokemons[4].nom.toUpperCase() %>";
        modifBarre.value = `${pvActu}`;
        modifBarre.max = "<%= pokemons[4].stats.pv %>";
        modifPVMax.textContent = `${pvActu}/<%= pokemons[4].stats.pv %>`;
        modifBadge1.textContent = "<%= pokemons[4].attaque1.type %>";
        modifNomAtt1.textContent = "<%= pokemons[4].attaque1.nom %>";
        modifBadge2.textContent = "<%= pokemons[4].attaque2.type %>";
        modifNomAtt2.textContent = "<%= pokemons[4].attaque2.nom %>";
        modifBadge3.textContent = "<%= pokemons[4].attaque3.type %>";
        modifNomAtt3.textContent = "<%= pokemons[4].attaque3.nom %>";
        modifBadge4.textContent = "<%= pokemons[4].attaque4.type %>";
        modifNomAtt4.textContent = "<%= pokemons[4].attaque4.nom %>";

        if (pvAvant !== 0) {
          calculPV("switch");
        }
      } else if (num === 6) {
        numPoke = 6;
        nombre = 5;

        pv = Number("<%- pokemons[5].stats.pv %>");
        if (Number.isInteger(tabPVActu[5])) {
          pvActu = tabPVActu[5];
        } else {
          pvActu = pv;
        }
        attMaxPoke = Number("<%- pokemons[5].stats.att %>");
        defMaxPoke = Number("<%- pokemons[5].stats.def %>");
        attSMaxPoke = Number("<%- pokemons[5].stats.attS %>");
        defSMaxPoke = Number("<%- pokemons[5].stats.defS %>");
        vitMaxPoke = Number("<%- pokemons[5].stats.vit %>");
        attPoke = attMaxPoke;
        defPoke = defMaxPoke;
        attSPoke = attSMaxPoke;
        defSPoke = defSMaxPoke;
        vitPoke = vitMaxPoke;
        attaque_dmg1 = Number("<%- pokemons[5].attaque1.puissance %>");
        attaque_dmg2 = Number("<%- pokemons[5].attaque2.puissance %>");
        attaque_dmg3 = Number("<%- pokemons[5].attaque3.puissance %>");
        attaque_dmg4 = Number("<%- pokemons[5].attaque4.puissance %>");
        attaque1Type = "<%- pokemons[5].attaque1.type %>";
        attaque2Type = "<%- pokemons[5].attaque2.type %>";
        attaque3Type = "<%- pokemons[5].attaque3.type %>";
        attaque4Type = "<%- pokemons[5].attaque4.type %>";
        attaque1Nom = "<%- pokemons[5].attaque1.nom %>";
        attaque2Nom = "<%- pokemons[5].attaque2.nom %>";
        attaque3Nom = "<%- pokemons[5].attaque3.nom %>";
        attaque4Nom = "<%- pokemons[5].attaque4.nom %>";
        attaque1Classe = "<%- pokemons[5].attaque1.classe %>";
        attaque2Classe = "<%- pokemons[5].attaque2.classe %>";
        attaque3Classe = "<%- pokemons[5].attaque3.classe %>";
        attaque4Classe = "<%- pokemons[5].attaque4.classe %>";
        type1 = "<%- pokemons[5].type1 %>";
        type2 = "<%- pokemons[5].type2 %>";

        badgeStatutPermaPoke(tabStatutPerma[5], badgeStatut);
        colorStatutPermaPoke(tabStatutPerma[5], badgeStatut);

        colorAttaque1 = couleur(attaque1Type, colorAttaque1);
        colorAttaque2 = couleur(attaque2Type, colorAttaque2);
        colorAttaque3 = couleur(attaque3Type, colorAttaque3);
        colorAttaque4 = couleur(attaque4Type, colorAttaque4);

        document.getElementById("badgeAtt1").style.backgroundColor =
          colorAttaque1;
        document.getElementById("badgeAtt2").style.backgroundColor =
          colorAttaque2;
        document.getElementById("badgeAtt3").style.backgroundColor =
          colorAttaque3;
        document.getElementById("badgeAtt4").style.backgroundColor =
          colorAttaque4;

        modifSprite.src = "<%- pokemons[5].sprite %>";
        modifNom.textContent = "<%= pokemons[5].nom.toUpperCase() %>";
        modifBarre.value = `${pvActu}`;
        modifBarre.max = "<%= pokemons[5].stats.pv %>";
        modifPVMax.textContent = `${pvActu}/<%= pokemons[5].stats.pv %>`;
        modifBadge1.textContent = "<%= pokemons[5].attaque1.type %>";
        modifNomAtt1.textContent = "<%= pokemons[5].attaque1.nom %>";
        modifBadge2.textContent = "<%= pokemons[5].attaque2.type %>";
        modifNomAtt2.textContent = "<%= pokemons[5].attaque2.nom %>";
        modifBadge3.textContent = "<%= pokemons[5].attaque3.type %>";
        modifNomAtt3.textContent = "<%= pokemons[5].attaque3.nom %>";
        modifBadge4.textContent = "<%= pokemons[5].attaque4.type %>";
        modifNomAtt4.textContent = "<%= pokemons[5].attaque4.nom %>";

        if (pvAvant !== 0) {
          calculPV("switch");
        }
      }
    }

    //Action de changement de pokemon adverse
    function changementPokeVS(num) {
      const modifSpriteVS = document.getElementById("pokemonVS");
      const modifNomVS = document.getElementById("nomPokeMAJVS");
      const modifBarreVS = document.getElementById("barrePokeVS");
      const modifPVMaxVS = document.getElementById("pvMaxPokeVS");

      const badgeStatutVS = document.getElementById("statutVS");
      let texteVS = "";
      let couleurVS = "";

      cranStatVS = [0, 0, 0, 0, 0];
      bruVS = 0;
      paraBs = 0;
      poisVS = 0;
      badgeAttVS.textContent = "";
      badgeAttVS.style.backgroundColor = "";
      badgeDefVS.textContent = "";
      badgeDefVS.style.backgroundColor = "";
      badgeAttSVS.textContent = "";
      badgeAttSVS.style.backgroundColor = "";
      badgeDefSVS.textContent = "";
      badgeDefSVS.style.backgroundColor = "";
      badgeVitVS.textContent = "";
      badgeVitVS.style.backgroundColor = "";

      if (num === 1) {
        nombreVS = 0;

        pvVS = Number("<%- pokemonsVS[0].stats.pv %>");
        if (Number.isInteger(tabPVActuVS[0])) {
          pvActuVS = tabPVActuVS[0];
        } else {
          pvActuVS = pvVS;
        }
        attMaxPokeVS = Number("<%- pokemonsVS[0].stats.att %>");
        defMaxPokeVS = Number("<%- pokemonsVS[0].stats.def %>");
        attSMaxPokeVS = Number("<%- pokemonsVS[0].stats.attS %>");
        defSMaxPokeVS = Number("<%- pokemonsVS[0].stats.defS %>");
        vitMaxPokeVS = Number("<%- pokemonsVS[0].stats.vit %>");
        attPokeVS = attMaxPokeVS;
        defPokeVS = defMaxPokeVS;
        attSPokeVS = attSMaxPokeVS;
        defSPokeVS = defSMaxPokeVS;
        vitPokeVS = vitMaxPokeVS;
        attaque_dmg1VS = Number("<%- pokemonsVS[0].attaque1.puissance %>");
        attaque_dmg2VS = Number("<%- pokemonsVS[0].attaque2.puissance %>");
        attaque_dmg3VS = Number("<%- pokemonsVS[0].attaque3.puissance %>");
        attaque_dmg4VS = Number("<%- pokemonsVS[0].attaque4.puissance %>");
        attaque1TypeVS = "<%- pokemonsVS[0].attaque1.type %>";
        attaque2TypeVS = "<%- pokemonsVS[0].attaque2.type %>";
        attaque3TypeVS = "<%- pokemonsVS[0].attaque3.type %>";
        attaque4TypeVS = "<%- pokemonsVS[0].attaque4.type %>";
        attaque1NomVS = "<%- pokemonsVS[0].attaque1.nom %>";
        attaque2NomVS = "<%- pokemonsVS[0].attaque2.nom %>";
        attaque3NomVS = "<%- pokemonsVS[0].attaque3.nom %>";
        attaque4NomVS = "<%- pokemonsVS[0].attaque4.nom %>";
        attaque1ClasseVS = "<%- pokemonsVS[0].attaque1.classe %>";
        attaque2ClasseVS = "<%- pokemonsVS[0].attaque2.classe %>";
        attaque3ClasseVS = "<%- pokemonsVS[0].attaque3.classe %>";
        attaque4ClasseVS = "<%- pokemonsVS[0].attaque4.classe %>";
        type1VS = "<%- pokemonsVS[0].type1 %>";
        type2VS = "<%- pokemonsVS[0].type2 %>";

        badgeStatutPermaPoke(tabStatutPermaVS[0], badgeStatutVS);
        colorStatutPermaPoke(tabStatutPermaVS[0], badgeStatutVS);

        modifSpriteVS.src = "<%- pokemonsVS[0].sprite %>";
        modifNomVS.textContent = "<%= pokemonsVS[0].nom.toUpperCase() %>";
        modifBarreVS.value = `${pvActuVS}`;
        modifBarreVS.max = "<%= pokemonsVS[0].stats.pv %>";
        modifPVMaxVS.textContent = `${pvActuVS}/<%= pokemonsVS[0].stats.pv %>`;
      } else if (num === 2) {
        nombreVS = 1;

        pvVS = Number("<%- pokemonsVS[1].stats.pv %>");
        if (Number.isInteger(tabPVActuVS[1])) {
          pvActuVS = tabPVActuVS[1];
        } else {
          pvActuVS = pvVS;
        }
        attMaxPokeVS = Number("<%- pokemonsVS[1].stats.att %>");
        defMaxPokeVS = Number("<%- pokemonsVS[1].stats.def %>");
        attSMaxPokeVS = Number("<%- pokemonsVS[1].stats.attS %>");
        defSMaxPokeVS = Number("<%- pokemonsVS[1].stats.defS %>");
        vitMaxPokeVS = Number("<%- pokemonsVS[1].stats.vit %>");
        attPokeVS = attMaxPokeVS;
        defPokeVS = defMaxPokeVS;
        attSPokeVS = attSMaxPokeVS;
        defSPokeVS = defSMaxPokeVS;
        vitPokeVS = vitMaxPokeVS;
        attaque_dmg1VS = Number("<%- pokemonsVS[1].attaque1.puissance %>");
        attaque_dmg2VS = Number("<%- pokemonsVS[1].attaque2.puissance %>");
        attaque_dmg3VS = Number("<%- pokemonsVS[1].attaque3.puissance %>");
        attaque_dmg4VS = Number("<%- pokemonsVS[1].attaque4.puissance %>");
        attaque1TypeVS = "<%- pokemonsVS[1].attaque1.type %>";
        attaque2TypeVS = "<%- pokemonsVS[1].attaque2.type %>";
        attaque3TypeVS = "<%- pokemonsVS[1].attaque3.type %>";
        attaque4TypeVS = "<%- pokemonsVS[1].attaque4.type %>";
        attaque1NomVS = "<%- pokemonsVS[1].attaque1.nom %>";
        attaque2NomVS = "<%- pokemonsVS[1].attaque2.nom %>";
        attaque3NomVS = "<%- pokemonsVS[1].attaque3.nom %>";
        attaque4NomVS = "<%- pokemonsVS[1].attaque4.nom %>";
        attaque1ClasseVS = "<%- pokemonsVS[1].attaque1.classe %>";
        attaque2ClasseVS = "<%- pokemonsVS[1].attaque2.classe %>";
        attaque3ClasseVS = "<%- pokemonsVS[1].attaque3.classe %>";
        attaque4ClasseVS = "<%- pokemonsVS[1].attaque4.classe %>";
        type1VS = "<%- pokemonsVS[1].type1 %>";
        type2VS = "<%- pokemonsVS[1].type2 %>";

        badgeStatutPermaPoke(tabStatutPermaVS[1], badgeStatutVS);
        colorStatutPermaPoke(tabStatutPermaVS[1], badgeStatutVS);

        modifSpriteVS.src = "<%- pokemonsVS[1].sprite %>";
        modifNomVS.textContent = "<%= pokemonsVS[1].nom.toUpperCase() %>";
        modifBarreVS.value = `${pvActuVS}`;
        modifBarreVS.max = "<%= pokemonsVS[1].stats.pv %>";
        modifPVMaxVS.textContent = `${pvActuVS}/<%= pokemonsVS[1].stats.pv %>`;
      } else if (num === 3) {
        nombreVS = 2;

        pvVS = Number("<%- pokemonsVS[2].stats.pv %>");
        if (Number.isInteger(tabPVActuVS[2])) {
          pvActuVS = tabPVActuVS[2];
        } else {
          pvActuVS = pvVS;
        }
        attMaxPokeVS = Number("<%- pokemonsVS[2].stats.att %>");
        defMaxPokeVS = Number("<%- pokemonsVS[2].stats.def %>");
        attSMaxPokeVS = Number("<%- pokemonsVS[2].stats.attS %>");
        defSMaxPokeVS = Number("<%- pokemonsVS[2].stats.defS %>");
        vitMaxPokeVS = Number("<%- pokemonsVS[2].stats.vit %>");
        attPokeVS = attMaxPokeVS;
        defPokeVS = defMaxPokeVS;
        attSPokeVS = attSMaxPokeVS;
        defSPokeVS = defSMaxPokeVS;
        vitPokeVS = vitMaxPokeVS;
        attaque_dmg1VS = Number("<%- pokemonsVS[2].attaque1.puissance %>");
        attaque_dmg2VS = Number("<%- pokemonsVS[2].attaque2.puissance %>");
        attaque_dmg3VS = Number("<%- pokemonsVS[2].attaque3.puissance %>");
        attaque_dmg4VS = Number("<%- pokemonsVS[2].attaque4.puissance %>");
        attaque1TypeVS = "<%- pokemonsVS[2].attaque1.type %>";
        attaque2TypeVS = "<%- pokemonsVS[2].attaque2.type %>";
        attaque3TypeVS = "<%- pokemonsVS[2].attaque3.type %>";
        attaque4TypeVS = "<%- pokemonsVS[2].attaque4.type %>";
        attaque1NomVS = "<%- pokemonsVS[2].attaque1.nom %>";
        attaque2NomVS = "<%- pokemonsVS[2].attaque2.nom %>";
        attaque3NomVS = "<%- pokemonsVS[2].attaque3.nom %>";
        attaque4NomVS = "<%- pokemonsVS[2].attaque4.nom %>";
        attaque1ClasseVS = "<%- pokemonsVS[2].attaque1.classe %>";
        attaque2ClasseVS = "<%- pokemonsVS[2].attaque2.classe %>";
        attaque3ClasseVS = "<%- pokemonsVS[2].attaque3.classe %>";
        attaque4ClasseVS = "<%- pokemonsVS[2].attaque4.classe %>";
        type1VS = "<%- pokemonsVS[2].type1 %>";
        type2VS = "<%- pokemonsVS[2].type2 %>";

        badgeStatutPermaPoke(tabStatutPermaVS[2], badgeStatutVS);
        colorStatutPermaPoke(tabStatutPermaVS[2], badgeStatutVS);

        modifSpriteVS.src = "<%- pokemonsVS[2].sprite %>";
        modifNomVS.textContent = "<%= pokemonsVS[2].nom.toUpperCase() %>";
        modifBarreVS.value = `${pvActuVS}`;
        modifBarreVS.max = "<%= pokemonsVS[2].stats.pv %>";
        modifPVMaxVS.textContent = `${pvActuVS}/<%= pokemonsVS[2].stats.pv %>`;
      } else if (num === 4) {
        nombreVS = 3;

        pvVS = Number("<%- pokemonsVS[3].stats.pv %>");
        if (Number.isInteger(tabPVActuVS[3])) {
          pvActuVS = tabPVActuVS[3];
        } else {
          pvActuVS = pvVS;
        }
        attMaxPokeVS = Number("<%- pokemonsVS[3].stats.att %>");
        defMaxPokeVS = Number("<%- pokemonsVS[3].stats.def %>");
        attSMaxPokeVS = Number("<%- pokemonsVS[3].stats.attS %>");
        defSMaxPokeVS = Number("<%- pokemonsVS[3].stats.defS %>");
        vitMaxPokeVS = Number("<%- pokemonsVS[3].stats.vit %>");
        attPokeVS = attMaxPokeVS;
        defPokeVS = defMaxPokeVS;
        attSPokeVS = attSMaxPokeVS;
        defSPokeVS = defSMaxPokeVS;
        vitPokeVS = vitMaxPokeVS;
        attaque_dmg1VS = Number("<%- pokemonsVS[3].attaque1.puissance %>");
        attaque_dmg2VS = Number("<%- pokemonsVS[3].attaque2.puissance %>");
        attaque_dmg3VS = Number("<%- pokemonsVS[3].attaque3.puissance %>");
        attaque_dmg4VS = Number("<%- pokemonsVS[3].attaque4.puissance %>");
        attaque1TypeVS = "<%- pokemonsVS[3].attaque1.type %>";
        attaque2TypeVS = "<%- pokemonsVS[3].attaque2.type %>";
        attaque3TypeVS = "<%- pokemonsVS[3].attaque3.type %>";
        attaque4TypeVS = "<%- pokemonsVS[3].attaque4.type %>";
        attaque1NomVS = "<%- pokemonsVS[3].attaque1.nom %>";
        attaque2NomVS = "<%- pokemonsVS[3].attaque2.nom %>";
        attaque3NomVS = "<%- pokemonsVS[3].attaque3.nom %>";
        attaque4NomVS = "<%- pokemonsVS[3].attaque4.nom %>";
        attaque1ClasseVS = "<%- pokemonsVS[3].attaque1.classe %>";
        attaque2ClasseVS = "<%- pokemonsVS[3].attaque2.classe %>";
        attaque3ClasseVS = "<%- pokemonsVS[3].attaque3.classe %>";
        attaque4ClasseVS = "<%- pokemonsVS[3].attaque4.classe %>";
        type1VS = "<%- pokemonsVS[3].type1 %>";
        type2VS = "<%- pokemonsVS[3].type2 %>";

        badgeStatutPermaPoke(tabStatutPermaVS[3], badgeStatutVS);
        colorStatutPermaPoke(tabStatutPermaVS[3], badgeStatutVS);

        modifSpriteVS.src = "<%- pokemonsVS[3].sprite %>";
        modifNomVS.textContent = "<%= pokemonsVS[3].nom.toUpperCase() %>";
        modifBarreVS.value = `${pvActuVS}`;
        modifBarreVS.max = "<%= pokemonsVS[3].stats.pv %>";
        modifPVMaxVS.textContent = `${pvActuVS}/<%= pokemonsVS[3].stats.pv %>`;
      } else if (num === 5) {
        nombreVS = 4;

        pvVS = Number("<%- pokemonsVS[4].stats.pv %>");
        if (Number.isInteger(tabPVActuVS[4])) {
          pvActuVS = tabPVActuVS[4];
        } else {
          pvActuVS = pvVS;
        }
        attMaxPokeVS = Number("<%- pokemonsVS[4].stats.att %>");
        defMaxPokeVS = Number("<%- pokemonsVS[4].stats.def %>");
        attSMaxPokeVS = Number("<%- pokemonsVS[4].stats.attS %>");
        defSMaxPokeVS = Number("<%- pokemonsVS[4].stats.defS %>");
        vitMaxPokeVS = Number("<%- pokemonsVS[4].stats.vit %>");
        attPokeVS = attMaxPokeVS;
        defPokeVS = defMaxPokeVS;
        attSPokeVS = attSMaxPokeVS;
        defSPokeVS = defSMaxPokeVS;
        vitPokeVS = vitMaxPokeVS;
        attaque_dmg1VS = Number("<%- pokemonsVS[4].attaque1.puissance %>");
        attaque_dmg2VS = Number("<%- pokemonsVS[4].attaque2.puissance %>");
        attaque_dmg3VS = Number("<%- pokemonsVS[4].attaque3.puissance %>");
        attaque_dmg4VS = Number("<%- pokemonsVS[4].attaque4.puissance %>");
        attaque1TypeVS = "<%- pokemonsVS[4].attaque1.type %>";
        attaque2TypeVS = "<%- pokemonsVS[4].attaque2.type %>";
        attaque3TypeVS = "<%- pokemonsVS[4].attaque3.type %>";
        attaque4TypeVS = "<%- pokemonsVS[4].attaque4.type %>";
        attaque1NomVS = "<%- pokemonsVS[4].attaque1.nom %>";
        attaque2NomVS = "<%- pokemonsVS[4].attaque2.nom %>";
        attaque3NomVS = "<%- pokemonsVS[4].attaque3.nom %>";
        attaque4NomVS = "<%- pokemonsVS[4].attaque4.nom %>";
        attaque1ClasseVS = "<%- pokemonsVS[4].attaque1.classe %>";
        attaque2ClasseVS = "<%- pokemonsVS[4].attaque2.classe %>";
        attaque3ClasseVS = "<%- pokemonsVS[4].attaque3.classe %>";
        attaque4ClasseVS = "<%- pokemonsVS[4].attaque4.classe %>";
        type1VS = "<%- pokemonsVS[4].type1 %>";
        type2VS = "<%- pokemonsVS[4].type2 %>";

        badgeStatutPermaPoke(tabStatutPermaVS[4], badgeStatutVS);
        colorStatutPermaPoke(tabStatutPermaVS[4], badgeStatutVS);

        modifSpriteVS.src = "<%- pokemonsVS[4].sprite %>";
        modifNomVS.textContent = "<%= pokemonsVS[4].nom.toUpperCase() %>";
        modifBarreVS.value = `${pvActuVS}`;
        modifBarreVS.max = "<%= pokemonsVS[4].stats.pv %>";
        modifPVMaxVS.textContent = `${pvActuVS}/<%= pokemonsVS[4].stats.pv %>`;
      } else if (num === 6) {
        nombreVS = 5;

        pvVS = Number("<%- pokemonsVS[5].stats.pv %>");
        if (Number.isInteger(tabPVActuVS[5])) {
          pvActuVS = tabPVActuVS[5];
        } else {
          pvActuVS = pvVS;
        }
        attMaxPokeVS = Number("<%- pokemonsVS[5].stats.att %>");
        defMaxPokeVS = Number("<%- pokemonsVS[5].stats.def %>");
        attSMaxPokeVS = Number("<%- pokemonsVS[5].stats.attS %>");
        defSMaxPokeVS = Number("<%- pokemonsVS[5].stats.defS %>");
        vitMaxPokeVS = Number("<%- pokemonsVS[5].stats.vit %>");
        attPokeVS = attMaxPokeVS;
        defPokeVS = defMaxPokeVS;
        attSPokeVS = attSMaxPokeVS;
        defSPokeVS = defSMaxPokeVS;
        vitPokeVS = vitMaxPokeVS;
        attaque_dmg1VS = Number("<%- pokemonsVS[5].attaque1.puissance %>");
        attaque_dmg2VS = Number("<%- pokemonsVS[5].attaque2.puissance %>");
        attaque_dmg3VS = Number("<%- pokemonsVS[5].attaque3.puissance %>");
        attaque_dmg4VS = Number("<%- pokemonsVS[5].attaque4.puissance %>");
        attaque1TypeVS = "<%- pokemonsVS[5].attaque1.type %>";
        attaque2TypeVS = "<%- pokemonsVS[5].attaque2.type %>";
        attaque3TypeVS = "<%- pokemonsVS[5].attaque3.type %>";
        attaque4TypeVS = "<%- pokemonsVS[5].attaque4.type %>";
        attaque1NomVS = "<%- pokemonsVS[5].attaque1.nom %>";
        attaque2NomVS = "<%- pokemonsVS[5].attaque2.nom %>";
        attaque3NomVS = "<%- pokemonsVS[5].attaque3.nom %>";
        attaque4NomVS = "<%- pokemonsVS[5].attaque4.nom %>";
        attaque1ClasseVS = "<%- pokemonsVS[5].attaque1.classe %>";
        attaque2ClasseVS = "<%- pokemonsVS[5].attaque2.classe %>";
        attaque3ClasseVS = "<%- pokemonsVS[5].attaque3.classe %>";
        attaque4ClasseVS = "<%- pokemonsVS[5].attaque4.classe %>";
        type1VS = "<%- pokemonsVS[5].type1 %>";
        type2VS = "<%- pokemonsVS[5].type2 %>";

        badgeStatutPermaPoke(tabStatutPermaVS[5], badgeStatutVS);
        colorStatutPermaPoke(tabStatutPermaVS[5], badgeStatutVS);

        modifSpriteVS.src = "<%- pokemonsVS[5].sprite %>";
        modifNomVS.textContent = "<%= pokemonsVS[5].nom.toUpperCase() %>";
        modifBarreVS.value = `${pvActuVS}`;
        modifBarreVS.max = "<%= pokemonsVS[5].stats.pv %>";
        modifPVMaxVS.textContent = `${pvActuVS}/<%= pokemonsVS[5].stats.pv %>`;
      }
    }
  </script>
</html>
